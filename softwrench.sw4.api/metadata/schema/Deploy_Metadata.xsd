<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.controltechnologysolutions.com/deploymetadata"
        xmlns:tns="http://www.controltechnologysolutions.com/deploymetadata" elementFormDefault="qualified">


  <element name="metadata">
    <complexType>
      <choice minOccurs="0" maxOccurs="unbounded">


        <element name="globalproperties" maxOccurs="1" minOccurs="0">
          <complexType>
            <choice minOccurs="0" maxOccurs="unbounded">
              <element name="property" type="tns:Parameter" maxOccurs="unbounded" minOccurs="1">
              </element>
              <element name="environment" type="tns:Environment" maxOccurs="unbounded" minOccurs="0"></element>
            </choice>
          </complexType>
        </element>
      </choice>
    </complexType>
  </element>

  <complexType name="Metadata"></complexType>

  <complexType name="Entities">
    <sequence>
      <element name="entity" type="tns:Entity" maxOccurs="unbounded" minOccurs="1"></element>
    </sequence>
  </complexType>

  <complexType name="Applications">
    <sequence>
      <element name="application" type="tns:Application" maxOccurs="unbounded" minOccurs="1"></element>
    </sequence>
  </complexType>

  <complexType name="Entity">
    <sequence>
      <element name="attributes" maxOccurs="1" minOccurs="1">
        <complexType>
          <sequence>
            <element name="attribute" type="tns:Attribute" maxOccurs="unbounded" minOccurs="1"></element>
          </sequence>
        </complexType>
      </element>
      <element name="relationships" maxOccurs="1" minOccurs="0">
        <complexType>
          <sequence>
            <element name="relationship" type="tns:Relationship" maxOccurs="unbounded" minOccurs="1"></element>
          </sequence>
        </complexType>
      </element>
      <element name="connectorParameters" maxOccurs="1" minOccurs="0">
        <complexType>
          <sequence>
            <element name="connectorParameter" type="tns:Parameter" maxOccurs="unbounded" minOccurs="1"></element>
          </sequence>
        </complexType>
      </element>
    </sequence>
    <attribute name="name" type="string" use="required"></attribute>
    <attribute name="idAttribute" type="string" use="required"></attribute>
  </complexType>

  <complexType name="Attribute">
    <attribute name="name" type="string" use="required"></attribute>
    <attribute name="required" type="string"></attribute>
    <attribute name="type" type="string" use="required"></attribute>
    <attribute name="auto-generated" type="boolean"></attribute>
  </complexType>

  <complexType name="Relationship">
    <sequence>
      <element name="relationshipAttribute"
			  type="tns:RelationshipAttribute" maxOccurs="unbounded"
			  minOccurs="1">
      </element>
    </sequence>
    <attribute name="to" type="string"></attribute>
    <attribute name="collection" type="boolean" default="false"></attribute>
    <attribute name="qualifier" type="string"/>
  </complexType>

  <complexType name="RelationshipAttribute">
    <attribute name="from" type="string"></attribute>
    <attribute name="to" type="string"></attribute>
    <attribute name="primary" type="boolean"></attribute>
    <attribute name="literal" type="string"></attribute>
    <attribute name="quoteLiteral" type="boolean"></attribute>
  </complexType>

  <complexType name="Parameter">
    <attribute name="key" type="string" use="required"></attribute>
    <attribute name="value" type="string" use="required"></attribute>
  </complexType>

  <complexType name="Application">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element name="schemas" maxOccurs="1" minOccurs="1">
        <complexType>
          <choice minOccurs="0" maxOccurs="unbounded">
            <element name="schema" type="tns:Schema"
						  maxOccurs="unbounded" minOccurs="1">
            </element>
            <element name="detail" type="tns:Detail"></element>
            <element name="list" type="tns:List"></element>
          </choice>

        </complexType>
      </element>
      <element name="properties" maxOccurs="1" minOccurs="0">
        <complexType>
          <sequence>
            <element name="property" type="tns:Parameter"
						  maxOccurs="unbounded" minOccurs="1">
            </element>
          </sequence>
        </complexType>
      </element>
    </choice>
    <attribute name="name" type="string" use="required"></attribute>
    <attribute name="title" type="string" use="required"></attribute>
    <attribute name="entity" type="string" use="required"></attribute>
    <attribute name="id" type="string"></attribute>
  </complexType>

  <complexType name="Schema">
    <annotation>
      <documentation>
        Defines which schema should be renderized after this
        schema. If absent, the next schema will be choosen based
        on the stereotype rules, if any
      </documentation>
    </annotation>
    <complexContent>
      <extension base="tns:SchemaRequest">
        <choice minOccurs="0" maxOccurs="unbounded">
          <element name="field" type="tns:Field" maxOccurs="unbounded" minOccurs="0">
          </element>
          <element name="section" maxOccurs="unbounded"
			  minOccurs="0">
            <complexType>
              <choice minOccurs="0" maxOccurs="unbounded">


                <element name="field" type="tns:Field"
									maxOccurs="unbounded" minOccurs="0">
                </element>
                <element name="association" type="tns:Association"
									maxOccurs="unbounded" minOccurs="0">
                </element>
                <element name="composition" type="tns:Composition"
									maxOccurs="unbounded" minOccurs="0">
                </element>
                <element name="optionfield" type="tns:OptionField"
									maxOccurs="unbounded" minOccurs="0">
                </element>
              </choice>
              <attribute name="id" type="string"></attribute>
              <attribute name="resourcepath" type="string">
                <annotation>
                  <documentation>
                    Can point to an external resource, like a
                    html. If specified, the application will
                    render the given resource exactly at this
                    point.
                  </documentation>
                </annotation>
              </attribute>
              <attribute name="parameters" type="string"></attribute>
              <attribute name="label" type="string"></attribute>
              <attribute name="attribute" type="string"></attribute>
            </complexType>
          </element>
          <element name="association" type="tns:Association"
					  maxOccurs="unbounded" minOccurs="0">
          </element>
          <element name="composition" type="tns:Composition"
					  maxOccurs="unbounded" minOccurs="0">
          </element>
          <element name="optionfield" type="tns:OptionField"
					  maxOccurs="unbounded" minOccurs="0">
          </element>

          <element name="properties" maxOccurs="unbounded"
					  minOccurs="0">
            <complexType>
              <sequence>
                <element name="property"
								  type="tns:Parameter" maxOccurs="unbounded" minOccurs="1">
                </element>
              </sequence>
            </complexType>
          </element>
          <element name="commands" maxOccurs="unbounded"
					  minOccurs="0">
            <complexType>
              <sequence>
                <element name="command"
								  type="tns:Command" maxOccurs="unbounded" minOccurs="1">
                </element>
              </sequence>
              <attribute name="removeundeclared"
							  type="boolean" use="optional" default="false">
              </attribute>
            </complexType>
          </element>
        </choice>



        <attribute name="platform" type="string"
				  use="optional">
        </attribute>
        <attribute name="stereotype"
				  type="tns:StereotypeType">
          <annotation>
            <documentation>
              Indicates whether the schema should behave
              in a similar way to either a list or detail
              schemas. ItÂ´s a hint for the framework to
              know how to do proper optimization
            </documentation>
          </annotation>
        </attribute>
        <attribute name="title" type="string"></attribute>
        <attribute name="abstract" type="boolean"></attribute>
        <attribute name="parentschema" type="string"></attribute>
      </extension>
    </complexContent>
  </complexType>

  <simpleType name="modeType">
    <restriction base="string">
      <enumeration value="input"></enumeration>
      <enumeration value="output"></enumeration>
    </restriction>
  </simpleType>

  <complexType name="Field">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element name="renderer" type="tns:Renderer" maxOccurs="1"
				  minOccurs="0">
      </element>
      <element name="number" maxOccurs="1" minOccurs="0">
        <complexType>
          <attribute name="decimals" type="int"></attribute>
          <attribute name="min" type="int"></attribute>
          <attribute name="max" type="int"></attribute>
        </complexType>
      </element>
      <element name="lookup" type="tns:Lookup" maxOccurs="1"
				  minOccurs="0">
      </element>
      <element name="date" maxOccurs="1" minOccurs="0">
        <complexType>
          <attribute name="format" type="string"></attribute>
          <attribute name="time" type="boolean"></attribute>
        </complexType>
      </element>
    </choice>

    <attribute name="attribute" type="string"></attribute>
    <attribute name="attributeToServer" type="string">
      <annotation>
        <documentation>
          Attribute name to be sent to server API controller, via json
        </documentation>
      </annotation>
    </attribute>
    <attribute name="label" type="string"></attribute>
    <attribute name="requiredexpression" type="boolean"></attribute>
    <attribute name="readonly" type="boolean"></attribute>
    <attribute name="hidden" type="boolean"></attribute>
    <attribute name="showexpression" type="string"></attribute>
    <attribute name="qualifier" type="string"></attribute>
    <attribute name="default" type="string"></attribute>
    <attribute name="tooltip" type="string"></attribute>
  </complexType>

  <complexType name="Renderer">
    <attribute name="type" type="string" use="required"></attribute>
    <attribute name="params" type="string"></attribute>
  </complexType>

  <complexType name="Lookup">
    <sequence>
      <element name="lookupFilters" type="tns:LookupFilters" maxOccurs="1" minOccurs="0"></element>
    </sequence>
    <attribute name="sourceApplication" type="string"></attribute>
    <attribute name="sourceField" type="string"></attribute>
    <attribute name="sourceDisplay" type="string"></attribute>
    <attribute name="targetField" type="string"></attribute>
    <attribute name="targetQualifier" type="string"></attribute>
  </complexType>

  <complexType name="LookupFilters">
    <sequence>
      <element name="lookupFilter" type="tns:LookupFilter" maxOccurs="unbounded" minOccurs="0"></element>
    </sequence>
  </complexType>

  <complexType name="LookupFilter">
    <attribute name="sourceField" type="string"></attribute>
    <attribute name="literal" type="string"></attribute>
    <attribute name="targetField" type="string"></attribute>
  </complexType>

  <complexType name="Association">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element name="dataprovider" type="tns:DataProvider"
				maxOccurs="1" minOccurs="0">
      </element>
      <element name="renderer" type="tns:Renderer" maxOccurs="1"
				minOccurs="0">
      </element>

    </choice>

    <attribute name="label" type="string" use="required"></attribute>
    <attribute name="target" type="string" use="required"></attribute>
    <attribute name="labelfield" type="string" use="required"></attribute>
    <attribute name="default" type="string"></attribute>
    <attribute name="labelpattern" type="string"></attribute>
    <attribute name="placeholder" type="string"></attribute>
    <attribute name="extraprojectionvalues" type="string"
			use="optional">
      <annotation>
        <documentation>
          Comma separeted list of extra fields to be fetched
          from the relationship besides the target and label
          ones. Those fields will be available to the
          application for read-only use, and shall not be
          submited back to the server
        </documentation>
      </annotation>
    </attribute>
    <attribute name="showexpression" type="string"></attribute>
    <attribute name="dependantfields" type="string"></attribute>
    <attribute name="tooltip" type="string"></attribute>
    <attribute name="isenabled" type="string" use="optional"></attribute>
  </complexType>

  <complexType name="DataProvider">
    <attribute name="postfilterFunction" type="string"></attribute>
    <attribute name="whereClause" type="string"></attribute>
    <attribute name="prefilterfunction" type="string"></attribute>
  </complexType>

  <complexType name="Composition">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element name="renderer" type="tns:Renderer" maxOccurs="1"
				  minOccurs="0">
      </element>
      <element name="collectionproperties" maxOccurs="1"
				  minOccurs="0">
        <complexType>
          <attribute name="allowremoval" type="boolean"
							  default="false">
          </attribute>
          <attribute name="allowupdate" type="boolean"
							  default="false">
          </attribute>
          <attribute name="allowcreation" type="boolean"
							  default="true">
          </attribute>
          <attribute name="listschema" type="string"></attribute>
          <attribute name="autocommit" type="boolean"
							  use="optional">
          </attribute>
        </complexType>
      </element>
    </choice>
    <attribute name="relationship" type="string" use="required"></attribute>
    <attribute name="label" type="string" use="required"></attribute>
    <attribute name="inline" type="boolean" default="true"></attribute>
    <attribute name="hidden" type="boolean"></attribute>
    <attribute name="detailschema" type="string">
      <annotation>
        <documentation>
          The schema which will be used on the composition. If
          none is provided, "detail" will be used as a default
        </documentation>
      </annotation>
    </attribute>
    <attribute name="printschema" type="string">
      <annotation>
        <documentation>
          The schema which will be used for printing the composition. If
          none is provided, "detail" will be used as a default
        </documentation>
      </annotation>
    </attribute>
    <attribute name="rendermode" type="tns:NewSimpleType"
			use="optional">
      <annotation>
        <documentation>
          If absent the composition will be rendered on the same
          type as the root entity (like input --&gt; input). Use
          this to fix the composition on input mode even if the
          root entity is on output mode
        </documentation>
      </annotation>
    </attribute>
    <attribute name="showexpression" type="string"></attribute>
    <attribute name="tooltip" type="string"></attribute>
  </complexType>

  <complexType name="OptionField">
    <sequence>
      <element name="renderer" type="tns:Renderer" maxOccurs="1" 
               minOccurs="0">
      </element>
      <element name="option" type="tns:OptionType"
				  maxOccurs="unbounded" minOccurs="1">
      </element>
    </sequence>
    <attribute name="label" type="string"></attribute>
    <attribute name="attribute" type="string" use="required"></attribute>
    <attribute name="requiredexpression" type="boolean"></attribute>
    <attribute name="default" type="string"></attribute>
    <attribute name="showexpression" type="string"></attribute>
    <attribute name="tooltip" type="string"></attribute>
  </complexType>

  <complexType name="OptionType">
    <attribute name="label" type="string" use="required"></attribute>
    <attribute name="value" type="string" use="required"></attribute>
  </complexType>


  <complexType name="ConnectorParameter"></complexType>

  <complexType name="Detail">
    <complexContent>
      <extension base="tns:Schema">
        <attribute name="id" type="string" use="optional" />
      </extension>
    </complexContent>
  </complexType>

  <complexType name="List">
    <complexContent>
      <extension base="tns:Schema">
        <attribute name="id" type="string" use="optional" ></attribute>
      </extension>
    </complexContent>
  </complexType>

  <simpleType name="StereotypeType">
    <restriction base="string">
      <enumeration value="list"></enumeration>
      <enumeration value="detail"></enumeration>
      <enumeration value="compositionlist"></enumeration>
      <enumeration value="compositiondetail"></enumeration>
    </restriction>
  </simpleType>

  <simpleType name="SchemaModeType">
    <restriction base="string">
      <enumeration value="input"></enumeration>
      <enumeration value="output"></enumeration>
    </restriction>
  </simpleType>

  <complexType name="SchemaRequest">
    <attribute name="id" type="string"></attribute>
    <attribute name="mode" type="string"></attribute>
  </complexType>

  <complexType name="Command">
    <attribute name="id" type="string" use="required"></attribute>
    <attribute name="label" type="string" use="required"></attribute>
    <attribute name="clientresourcepath" type="string"></attribute>
    <attribute name="role" type="string" use="optional"></attribute>
    <attribute name="stereotype">
      <simpleType>
        <restriction base="string">
          <enumeration value="print"></enumeration>
          <enumeration value="confirm"></enumeration>
          <enumeration value="cancel"></enumeration>
          <enumeration value="delete"></enumeration>
        </restriction>
      </simpleType>
    </attribute>
    <attribute name="remove" type="boolean">
      <annotation>
        <documentation>
          Specifies whether this declaration is to remove an
          available command (true), or to add a new one
        </documentation>
      </annotation>
    </attribute>
    <attribute name="clientfunction" type="string"></attribute>
    <attribute name="successmessage" type="string" default="data successfully saved"></attribute>
    <attribute name="cssclasses" type="string"></attribute>
    <attribute name="showexpression" type="string"></attribute>
    <attribute name="nextSchemaId" type="string"></attribute>
  </complexType>

  <simpleType name="NewSimpleType">
    <restriction base="string">
      <enumeration value="input"></enumeration>
      <enumeration value="output"></enumeration>
    </restriction>
  </simpleType>

  <complexType name="Environment">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element name="property" type="tns:Parameter"></element>
    </choice>
    <attribute name="key" type="string" use="required"/>
  </complexType>
</schema>