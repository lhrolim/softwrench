<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.example.org/metadata"
	xmlns:tns="http://www.example.org/metadata" elementFormDefault="qualified">


  <element name="metadata">
    <complexType>
      <choice minOccurs="0" maxOccurs="unbounded">
        <element name="entities" type="tns:Entities" maxOccurs="1"
					minOccurs="1">
        </element>
        <element name="applications" type="tns:Applications"
					maxOccurs="1" minOccurs="1">
        </element>
        <element name="templates" type="tns:TemplatesType"></element>
        <element name="commandbars" type="tns:CommandsDeclarationsType"></element>
      </choice>
    </complexType>
  </element>

  <complexType name="Metadata"></complexType>

  <complexType name="Entities">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element name="queries" type="tns:queriesType" minOccurs="0"
				maxOccurs="1"></element>
      <element name="entity" type="tns:Entity" maxOccurs="unbounded"
				minOccurs="1">
      </element>
    </choice>
  </complexType>

  <complexType name="CommandsDeclarationsType">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element name="commandgroup" type="tns:commandsComplexType" minOccurs="0"
				maxOccurs="unbounded"></element>
    </choice>
  </complexType>

  <complexType name="TemplatesType">

    <choice>
      <element name="template" maxOccurs="unbounded"
				minOccurs="1">
        <complexType>
          <attribute name="path" type="string"></attribute>
        </complexType>
      </element>
    </choice>
  </complexType>

  <complexType name="Applications">
    <sequence>
      <element name="application" type="tns:Application" maxOccurs="unbounded"
				minOccurs="1"></element>
    </sequence>
  </complexType>

  <complexType name="Entity">
    <sequence>
      <element name="attributes" maxOccurs="1" minOccurs="0">
        <complexType>
          <sequence>
            <element name="attribute" type="tns:Attribute" maxOccurs="unbounded"
							minOccurs="1">
            </element>
          </sequence>
          <attribute name="excludeundeclared" type="boolean"></attribute>
        </complexType>
      </element>
      <element name="relationships" maxOccurs="1" minOccurs="0">
        <complexType>
          <sequence>
            <element name="relationship" type="tns:Relationship"
							maxOccurs="unbounded" minOccurs="1">
            </element>
          </sequence>
          <attribute name="excludeundeclared" type="boolean"></attribute>
        </complexType>
      </element>
      <element name="connectorParameters" maxOccurs="1" minOccurs="0">
        <complexType>
          <sequence>
            <element name="connectorParameter" type="tns:Parameter"
							maxOccurs="unbounded" minOccurs="1">
            </element>
          </sequence>
          <attribute name="excludeundeclared" type="boolean"></attribute>
        </complexType>
      </element>
    </sequence>
    <attribute name="name" type="string" use="required"></attribute>
    <attribute name="idAttribute" type="string" use="required"></attribute>
    <attribute name="whereclause" type="string"></attribute>
    <attribute name="parententity" type="string"></attribute>
  </complexType>

  <complexType name="Attribute">
    <attribute name="name" type="string" use="required"></attribute>
    <attribute name="required" type="string"></attribute>
    <attribute name="type" type="string" use="required"></attribute>
    <attribute name="auto-generated" type="boolean"></attribute>
    <attribute name="query" type="string"></attribute>
  </complexType>

  <complexType name="Relationship">
    <sequence>
      <element name="relationshipAttribute" type="tns:RelationshipAttribute"
				maxOccurs="unbounded" minOccurs="1">
      </element>
    </sequence>
    <attribute name="to" type="string"></attribute>
    <attribute name="collection" type="boolean" default="false"></attribute>
    <attribute name="qualifier" type="string" />
  </complexType>

  <complexType name="RelationshipAttribute">
    <attribute name="from" type="string"></attribute>
    <attribute name="to" type="string"></attribute>
    <attribute name="primary" type="boolean"></attribute>
    <attribute name="literal" type="string"></attribute>
    <attribute name="query" type="string"></attribute>
    <attribute name="quoteLiteral" type="boolean"></attribute>
  </complexType>

  <complexType name="Parameter">
    <attribute name="key" type="string" use="required"></attribute>
    <attribute name="value" type="string" use="required"></attribute>
  </complexType>

  <complexType name="Application">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element name="schemas" maxOccurs="1" minOccurs="1">
        <complexType>
          <choice minOccurs="0" maxOccurs="unbounded">
            <element name="schema" type="tns:Schema" maxOccurs="unbounded"
							minOccurs="1">
            </element>
            <element name="detail" type="tns:Detail"></element>
            <element name="list" type="tns:List"></element>
          </choice>

        </complexType>
      </element>
      <element name="properties" maxOccurs="1" minOccurs="0">
        <complexType>
          <sequence>
            <element name="property" type="tns:Parameter" maxOccurs="unbounded"
							minOccurs="1">
            </element>
          </sequence>
        </complexType>
      </element>
      <element name="components" type="tns:displayablesType"
				minOccurs="0" maxOccurs="1"></element>
    </choice>
    <attribute name="name" type="string" use="required"></attribute>
    <attribute name="title" type="string" use="required"></attribute>
    <attribute name="entity" type="string" use="required"></attribute>
    <attribute name="id" type="string"></attribute>
    <attribute name="service" type="string"></attribute>
  </complexType>

  <complexType name="Schema">
    <annotation>
      <documentation>
        Defines which schema should be renderized after this
        schema. If absent, the next schema will be choosen based
        on the
        stereotype rules, if any
      </documentation>
    </annotation>
    <complexContent>
      <extension base="tns:SchemaRequest">
        <choice minOccurs="0" maxOccurs="unbounded">
          <element name="field" type="tns:Field"
						maxOccurs="unbounded" minOccurs="0">
          </element>
          <element maxOccurs="unbounded" minOccurs="0"
						ref="tns:section">

          </element>
          <element name="association" type="tns:Association"
						maxOccurs="unbounded" minOccurs="0">
          </element>
          <element name="composition" type="tns:Composition"
						maxOccurs="unbounded" minOccurs="0">
          </element>
          <element name="optionfield" type="tns:OptionField"
						maxOccurs="unbounded" minOccurs="0">
          </element>
          <element name="properties" maxOccurs="unbounded"
						minOccurs="0">
            <complexType>
              <sequence>
                <element name="property"
									type="tns:Parameter" maxOccurs="unbounded" minOccurs="1">
                </element>
              </sequence>
            </complexType>
          </element>
          <element name="tab" type="tns:TabType" minOccurs="0">

          </element>
          <element name="commandbars" maxOccurs="unbounded" minOccurs="0" type="tns:CommandsDeclarationsType"/>
          <element name="reference" minOccurs="0" maxOccurs="unbounded"
						type="tns:referenceComplexType">
          </element>
          <element name="event" type="tns:Event" minOccurs="0"
            maxOccurs="unbounded">
          </element>
        </choice>
        <attribute name="platform" type="string" use="optional">
        </attribute>
        <attribute name="unionschema" type="string" use="optional"/>
        <attribute name="stereotype" type="tns:StereotypeType">
          <annotation>
            <documentation>
              Indicates whether the schema should behave
              in a
              similar way to either a list or detail
              schemas. ItÂ´s a hint for
              the framework to
              know how to do proper optimization
            </documentation>
          </annotation>
        </attribute>
        <attribute name="title" type="string"></attribute>
        <attribute name="abstract" type="boolean"></attribute>
        <attribute name="parentschema" type="string"></attribute>
      </extension>
    </complexContent>
  </complexType>

  <simpleType name="modeType">
    <restriction base="string">
      <enumeration value="input"></enumeration>
      <enumeration value="output"></enumeration>
    </restriction>
  </simpleType>

  <complexType name="Field">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element name="renderer" type="tns:Renderer" maxOccurs="1"
				minOccurs="0">
      </element>
      <element name="filter" type="tns:Filter" maxOccurs="1"
        minOccurs="0">
      </element>
      <element name="number" maxOccurs="1" minOccurs="0">
        <complexType>
          <attribute name="decimals" type="int"></attribute>
          <attribute name="min" type="int"></attribute>
          <attribute name="max" type="int"></attribute>
        </complexType>
      </element>
      <element name="lookup" type="tns:Lookup" maxOccurs="1"
				minOccurs="0">
      </element>
      <element name="date" maxOccurs="1" minOccurs="0">
        <complexType>
          <attribute name="format" type="string"></attribute>
          <attribute name="time" type="boolean"></attribute>
        </complexType>
      </element>
      <element name="event" type="tns:Event" minOccurs="0"
				maxOccurs="unbounded"></element>
    </choice>

    <attribute name="attribute" type="string"></attribute>
    <attribute name="attributeToServer" type="string">
      <annotation>
        <documentation>
          Attribute name to be sent to server API controller,
          via json
        </documentation>
      </annotation>
    </attribute>
    <attribute name="label" type="string"></attribute>
    <attribute name="required" type="boolean"></attribute>
    <attribute name="readonly" type="boolean"></attribute>
    <attribute name="hidden" type="boolean"></attribute>
    <attribute name="showexpression" type="string"></attribute>
    <attribute name="enableexpression" type="string"></attribute>
    <attribute name="evalexpression" type="string"></attribute>
    <attribute name="qualifier" type="string"></attribute>
    <attribute name="default" type="string"></attribute>
    <attribute name="tooltip" type="string"></attribute>
  </complexType>

  <complexType name="Renderer">
    <attribute name="type" type="string" use="required"></attribute>
    <attribute name="params" type="string"></attribute>
  </complexType>

  <complexType name="Filter">
    <attribute name="operation" type="string" use="required"></attribute>
    <attribute name="params" type="string"></attribute>
    <attribute name="default" type="string"></attribute>
  </complexType>

  <complexType name="Lookup">
    <sequence>
      <element name="lookupFilters" type="tns:LookupFilters"
				maxOccurs="1" minOccurs="0"></element>
    </sequence>
    <attribute name="sourceApplication" type="string"></attribute>
    <attribute name="sourceField" type="string"></attribute>
    <attribute name="sourceDisplay" type="string"></attribute>
    <attribute name="targetField" type="string"></attribute>
    <attribute name="targetQualifier" type="string"></attribute>
  </complexType>

  <complexType name="LookupFilters">
    <sequence>
      <element name="lookupFilter" type="tns:LookupFilter"
				maxOccurs="unbounded" minOccurs="0"></element>
    </sequence>
  </complexType>

  <complexType name="LookupFilter">
    <attribute name="sourceField" type="string"></attribute>
    <attribute name="literal" type="string"></attribute>
    <attribute name="targetField" type="string"></attribute>
  </complexType>

  <complexType name="Association">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element name="dataprovider" type="tns:DataProvider"
				maxOccurs="1" minOccurs="0">
      </element>
      <element name="renderer" type="tns:Renderer" maxOccurs="1"
				minOccurs="0">
      </element>
      <element name="filter" type="tns:Filter" maxOccurs="1"
        minOccurs="0">
      </element>
      <element name="event" type="tns:Event" minOccurs="0"
				maxOccurs="unbounded">
      </element>
    </choice>

    <attribute name="label" type="string" use="required"></attribute>
    <attribute name="target" type="string" use="required">
      <annotation>
        <documentation>
          The name of the datamap property to which the selected value will be setted. This will be passed to the server on the json string
        </documentation>
      </annotation>
    </attribute>
    <attribute name="labelfield" type="string" use="required">
      <annotation>
        <documentation>
          should be a pattern like x_.y where x_ is the name of the relationship and y is the column to use as the label field.
        </documentation>
      </annotation>
    </attribute>
    <attribute name="default" type="string"></attribute>
    <attribute name="labelpattern" type="string"></attribute>
    <attribute name="placeholder" type="string"></attribute>
    <attribute name="extraprojectionvalues" type="string"
			use="optional">
      <annotation>
        <documentation>
          Comma separeted list of extra fields to be fetched
          from the relationship besides the target and label
          ones. Those fields will be available to the
          application for read-only use, and shall not be
          submited back to the server.<br/>

          If you need to submit such values to server side, use a hidden field <br/>

          The column is related to the to relationship (so if labelfield = a_.b you could use any value of a_ relationship).<br/>

        </documentation>
      </annotation>
    </attribute>
    <attribute name="showexpression" type="string"></attribute>
    <attribute name="dependantfields" type="string"></attribute>
    <attribute name="tooltip" type="string"></attribute>
    <attribute name="enableexpression" type="string"
			use="optional">
    </attribute>
    <attribute name="required" type="boolean"></attribute>
    <attribute name="qualifier" type="string"></attribute>
  </complexType>

  <complexType name="DataProvider">
    <attribute name="postfilterfunction" type="string"></attribute>
    <attribute name="whereClause" type="string"></attribute>
    <attribute name="prefilterfunction" type="string"></attribute>
    <attribute name="method" type="string"></attribute>
  </complexType>

  <complexType name="Composition">
    <sequence>

      <element name="header" type="tns:headerType" minOccurs="0"
				maxOccurs="1">
      </element>

      <choice minOccurs="0" maxOccurs="unbounded">
        <element name="renderer" type="tns:Renderer" maxOccurs="1"
					minOccurs="0">
        </element>
        <element name="collectionproperties" maxOccurs="1"
					minOccurs="0">
          <complexType>
            <attribute name="allowremoval" type="string" default="false">
            </attribute>
            <attribute name="allowupdate" type="string" default="false">
            </attribute>
            <attribute name="allowcreation" type="string" default="true">
            </attribute>
            <attribute name="listschema" type="string"></attribute>
            <attribute name="autocommit" type="boolean" use="optional"/>
            <attribute name="orderbyfield" type="string" use="optional"/>
          </complexType>
        </element>
        <element name="event" type="tns:Event" minOccurs="0"
          maxOccurs="unbounded">
        </element>
      </choice>
    </sequence>
    <attribute name="relationship" type="string" use="required"></attribute>
    <attribute name="label" type="string" use="required"></attribute>
    <attribute name="inline" type="boolean" default="true"></attribute>
    <attribute name="hidden" type="boolean"></attribute>
    <attribute name="detailschema" type="string">
      <annotation>
        <documentation>
          The schema which will be used on the composition. If
          none is provided, "detail" will be used as a default
        </documentation>
      </annotation>
    </attribute>
    <attribute name="printschema" type="string">
      <annotation>
        <documentation>
          The schema which will be used for printing the
          composition. If
          none is provided, "detail" will be used as a default
        </documentation>
      </annotation>
    </attribute>
    <attribute name="rendermode" type="tns:NewSimpleType" use="optional">
      <annotation>
        <documentation>
          If absent the composition will be rendered on the
          same
          type as the root entity (like input --&gt; input). Use
          this to
          fix the composition on input mode even if the
          root entity is on
          output mode
        </documentation>
      </annotation>
    </attribute>
    <attribute name="showexpression" type="string"></attribute>
    <attribute name="tooltip" type="string"></attribute>
  </complexType>

  <complexType name="OptionField">
    <sequence>
      <element name="renderer" type="tns:Renderer" maxOccurs="1"
				minOccurs="0">
      </element>
      <element name="filter" type="tns:Filter" maxOccurs="1"
        minOccurs="0">
      </element>
      <element name="option" type="tns:OptionType"
				maxOccurs="unbounded" minOccurs="0">
      </element>
      <element name="event" type="tns:Event" minOccurs="0"
				maxOccurs="unbounded">
      </element>
    </sequence>
    <attribute name="label" type="string"></attribute>
    <attribute name="attribute" type="string" use="required"></attribute>
    <attribute name="required" type="boolean"></attribute>
    <attribute name="default" type="string"></attribute>
    <attribute name="showexpression" type="string"></attribute>
    <attribute name="tooltip" type="string"></attribute>

    <attribute name="providerattribute" type="string"
			use="optional">
      <annotation>
        <documentation>
          If this attribute is present the list will be
          fetched from this value instead of predefined on the
          metadata
        </documentation>
      </annotation>
    </attribute>
    <attribute name="sort" type="boolean"></attribute>
    <attribute name="dependantfields" type="string"></attribute>
    <attribute name="qualifier" type="string"></attribute>
  </complexType>

  <complexType name="OptionType">
    <attribute name="label" type="string" use="required"></attribute>
    <attribute name="value" type="string" use="required"></attribute>
  </complexType>


  <complexType name="ConnectorParameter"></complexType>

  <complexType name="Detail">
    <complexContent>
      <extension base="tns:Schema">
        <attribute name="id" type="string" use="optional" />
      </extension>
    </complexContent>
  </complexType>

  <complexType name="List">
    <complexContent>
      <extension base="tns:Schema">
        <attribute name="id" type="string" use="optional"></attribute>
      </extension>
    </complexContent>
  </complexType>

  <simpleType name="StereotypeType">
    <restriction base="string">
      <enumeration value="list"></enumeration>
      <enumeration value="detail"></enumeration>
      <enumeration value="compositionlist"></enumeration>
      <enumeration value="compositiondetail"></enumeration>
    </restriction>
  </simpleType>

  <simpleType name="SchemaModeType">
    <restriction base="string">
      <enumeration value="input"></enumeration>
      <enumeration value="output"></enumeration>
    </restriction>
  </simpleType>

  <complexType name="SchemaRequest">
    <attribute name="id" type="string"></attribute>
    <attribute name="mode" type="string"></attribute>
  </complexType>

  <complexType name="Command">
    <attribute name="id" type="string" use="required"></attribute>
    <attribute name="label" type="string" use="optional"></attribute>
    <attribute name="tooltip" type="string"></attribute>
    <attribute name="service" type="string"></attribute>
    <attribute name="method" type="string"></attribute>
    <attribute name="parameters" type="string" use="optional">
      <annotation>
        <documentation>
          comma separeted list of parameter names of the $scope
          variable to pass through the command
        </documentation>
      </annotation>
    </attribute>

    <attribute name="showexpression" type="string"></attribute>
    <attribute name="role" type="string" use="optional"></attribute>
    <attribute name="stereotype">
      <simpleType>
        <restriction base="string">
          <enumeration value="print"></enumeration>
          <enumeration value="confirm"></enumeration>
          <enumeration value="cancel"></enumeration>
          <enumeration value="delete"></enumeration>
        </restriction>
      </simpleType>
    </attribute>
    <attribute name="remove" type="boolean">
      <annotation>
        <documentation>
          Specifies whether this declaration is to remove an
          available command (true), or to add a new one
        </documentation>
      </annotation>
    </attribute>
    <attribute name="successmessage" type="string"
			default="data successfully saved">
    </attribute>
    <attribute name="cssclasses" type="string"></attribute>
    <attribute name="nextSchemaId" type="string"></attribute>


    <attribute name="position">
      <annotation>
        <documentation>
          comma separeted list of parameter names of the $scope
          variable to pass through the command
        </documentation>
      </annotation>
    </attribute>
    <attribute name="icon" type="string"></attribute>

    <attribute name="defaultposition">
      <simpleType>
        <restriction base="string">
          <enumeration value="left"></enumeration>
          <enumeration value="right"></enumeration>
        </restriction>
      </simpleType>
    </attribute>
  </complexType>

  <simpleType name="NewSimpleType">
    <restriction base="string">
      <enumeration value="input"></enumeration>
      <enumeration value="output"></enumeration>
    </restriction>
  </simpleType>

  <complexType name="Environment">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element name="property" type="tns:Parameter"></element>
    </choice>
    <attribute name="key" type="string" use="required" />
  </complexType>

  <complexType name="TabType">



    <annotation>
      <documentation>
        This element will render a new tab, just like the
        compositions, but the
        only difference is that it doesnÂ´t refer to any
        entity.

        Inside a tab, any displayable could be inserted.
      </documentation>
    </annotation>
    <choice minOccurs="0" maxOccurs="unbounded">
      <element name="field" type="tns:Field" maxOccurs="unbounded"
				minOccurs="0">
      </element>
      <element name="association" type="tns:Association" maxOccurs="unbounded"
				minOccurs="0">
      </element>
      <element name="composition" type="tns:Composition" maxOccurs="unbounded"
				minOccurs="0">
      </element>
      <element name="optionfield" type="tns:OptionField" maxOccurs="unbounded"
				minOccurs="0">
      </element>
      <element name="section" type="tns:sectionComplexType"
				minOccurs="0" maxOccurs="unbounded"></element>
    </choice>
    <attribute name="id" type="string"></attribute>
    <attribute name="showexpression" type="string"></attribute>
    <attribute name="tooltip" type="string"></attribute>
    <attribute name="label" type="string"></attribute>


  </complexType>
  <element name="section" type="tns:sectionComplexType">
  </element>
  <complexType name="sectionComplexType">
    <sequence>

      <element name="header" type="tns:headerType" minOccurs="0"
				maxOccurs="1">
      </element>
      <choice minOccurs="0" maxOccurs="unbounded">
        <element minOccurs="0" maxOccurs="unbounded"
					name="field" type="tns:Field">
        </element>
        <element minOccurs="0" maxOccurs="unbounded"
					name="association" type="tns:Association">
        </element>
        <element minOccurs="0" maxOccurs="unbounded"
					name="composition" type="tns:Composition">
        </element>
        <element minOccurs="0" maxOccurs="unbounded"
					name="optionfield" type="tns:OptionField">
        </element>
        <element name="section" type="tns:sectionComplexType"
					minOccurs="0" maxOccurs="unbounded">
        </element>
        <element name="reference" type="tns:referenceComplexType" minOccurs="0" maxOccurs="unbounded"></element>
      </choice>
    </sequence>
    <attribute name="id" type="string"></attribute>
    <attribute name="resourcepath" type="string">
      <annotation></annotation>
    </attribute>
    <attribute name="parameters" type="string"></attribute>

    <attribute name="attribute" type="string"></attribute>
    <attribute name="showexpression" type="string"></attribute>
    <attribute name="orientation" default="vertical">
      <annotation>
        <documentation>
          Indicates whether the section should be
          rendered
          horizontally or vertically.
        </documentation>
      </annotation>
      <simpleType>
        <restriction base="string">
          <enumeration value="horizontal"></enumeration>
          <enumeration value="vertical"></enumeration>
        </restriction>
      </simpleType>
    </attribute>
  </complexType>
  <element name="commands" type="tns:CommandsDeclarationsType">

  </element>
  <complexType name="commandsComplexType">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element minOccurs="0" maxOccurs="unbounded" name="command"
    		type="tns:Command">
      </element>
      <element name="container" type="tns:CommandContainer"
    		maxOccurs="unbounded" minOccurs="0">
      </element>
      <element name="resourcecommand" type="tns:ResourceCommand"
    		minOccurs="0" maxOccurs="unbounded">
        <annotation>
          <documentation>
            This is a command that is complex enough to nned a
            custom html to define it
          </documentation>
        </annotation>
      </element>
      <element name="removecommand" type="tns:RemoveCommand" minOccurs="0" maxOccurs="unbounded"></element>
    </choice>
    <attribute use="optional" default="false"
			name="removeundeclared" type="boolean">
    </attribute>

    <attribute name="position">
      <simpleType>
        <restriction base="string">
          <enumeration value="gridtop"></enumeration>
          <enumeration value="gridrows"></enumeration>
          <enumeration value="compositiontop"></enumeration>
          <enumeration value="detailform"></enumeration>
          <enumeration value="compositionbottom"></enumeration>
        </restriction>
      </simpleType>
    </attribute>

    <attribute name="id" type="string">
      <annotation>
        <documentation>The id describes a way to point to a completely different commandbar, other than the one declared in the </documentation>
      </annotation>
    </attribute>
  </complexType>

  <complexType name="CommandContainer">
    <choice>
      <element minOccurs="0" maxOccurs="unbounded" name="command"
  			type="tns:Command">
      </element>
      <element name="container" type="tns:CommandContainer"
  			minOccurs="0" maxOccurs="unbounded">
      </element>
      <element name="resourcecommand" type="tns:ResourceCommand"
  			minOccurs="0" maxOccurs="unbounded">
      </element>
    </choice>
    <attribute name="id" type="string"></attribute>
    <attribute name="role" type="string"></attribute>
    <attribute name="position" type="string"></attribute>
    <attribute name="tooltip" type="string"></attribute>
    <attribute name="label" type="string"></attribute>
    <attribute name="icon" type="string"></attribute>
    <attribute name="service" type="string"></attribute>
    <attribute name="method" type="string"></attribute>
  </complexType>

  <complexType name="headerType">
    <attribute name="label" type="string" use="required"></attribute>
    <attribute name="params" type="string"></attribute>
    <attribute name="showexpression" type="string"></attribute>
    <attribute name="displacement">
      <simpleType>
        <restriction base="string">
          <enumeration value="ontop"></enumeration>
          <enumeration value="sameline"></enumeration>
        </restriction>
      </simpleType>
    </attribute>
  </complexType>

  <complexType name="Event">
    <attribute name="type" use="required">
      <simpleType>
        <restriction base="string">
          <enumeration value="afterchange"></enumeration>
          <enumeration value="beforechange"></enumeration>
          <enumeration value="onviewdetail"></enumeration>
          <enumeration value="onload"></enumeration>
        </restriction>
      </simpleType>
    </attribute>
    <attribute name="service" type="string" use="required"></attribute>
    <attribute name="method" type="string" use="required"></attribute>
  </complexType>

  <complexType name="queriesType">
    <sequence>
      <element name="query" type="tns:Parameter" minOccurs="1"
				maxOccurs="unbounded"></element>
    </sequence>
  </complexType>

  <complexType name="displayablesType">
    <sequence>
      <element name="componentdisplayable" type="tns:DisplayableComponentType"
				minOccurs="1" maxOccurs="unbounded"></element>
    </sequence>
  </complexType>

  <complexType name="DisplayableComponentType">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element name="field" type="tns:Field" maxOccurs="unbounded"
				minOccurs="0">
      </element>
      <element maxOccurs="unbounded" minOccurs="0" ref="tns:section">

      </element>
      <element name="association" type="tns:Association" maxOccurs="unbounded"
				minOccurs="0">
      </element>
      <element name="composition" type="tns:Composition" maxOccurs="unbounded"
				minOccurs="0">
      </element>
      <element name="optionfield" type="tns:OptionField" maxOccurs="unbounded"
				minOccurs="0">
      </element>



    </choice>
    <attribute name="id" type="string" use="required"></attribute>



  </complexType>
  <complexType name="referenceComplexType">
    <attribute name="id" type="string" use="required"></attribute>
    <attribute name="showexpression" type="string"></attribute>
    <attribute name="label" type="string"></attribute>
    <attribute name="attribute" type="string"></attribute>
    <attribute name="properties" type="string"></attribute>
    <attribute name="readonly" type="string"></attribute>
  </complexType>
  <complexType name="ResourceCommand">
    <attribute name="id" type="string"></attribute>
    <attribute name="path" type="string"></attribute>
    <attribute name="position" type="string">
      <annotation>
        <documentation>
          The position will inform where to place the command,
          relative to another command present on the default
          command bar.

          It should have the syntax:

          * C1 --&gt; gruop this command with existing command
          C1 * &gt;C1--&gt; place this command right to the
          command C1 * &amp;lt;C1 --&gt; place this command left
          to the command C1

          If none provided, the command will be placed at the
          end of the bar.

          Note, inside a &quot;commands&quot; declaration the
          order should be set declaratively, by the order of the
          children



          besides, as a legacy mode, it accepts values left or
          right to place the command relatively to the default
          commands on screen
        </documentation>
      </annotation>
    </attribute>
    <attribute name="role" type="string"></attribute>
    <attribute name="remove" type="boolean"></attribute>
  </complexType>
  <complexType name="RemoveCommand">
    <attribute name="id" type="string"></attribute>
  </complexType>

</schema>