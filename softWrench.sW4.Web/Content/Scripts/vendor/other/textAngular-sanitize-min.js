(function (e, t, n) { "use strict"; function i() { this.$get = ["$$sanitizeUri", function (e) { return function (t) { var n = []; k(t, H(n, function (t, n) { return !/^unsafe/.test(e(t, n)) })); return n.join("") } }] } function s(e) { var n = []; var r = H(n, t.noop); r.chars(e); return n.join("") } function C(e) { var t = {}, n = e.split(","), r; for (r = 0; r < n.length; r++) t[n[r]] = true; return t } function k(e, n) { function x(e, r, i, s) { r = t.lowercase(r); if (w[r]) { while (v.last() && E[v.last()]) { T("", v.last()) } } if (b[r] && v.last() == r) { T("", r) } s = m[r] || !!s; if (!s) v.push(r); var o = {}; i.replace(a, function (e, t, n, r, i) { var s = n || r || i || ""; o[t] = O(s) }); if (n.start) n.start(r, o, s) } function T(e, r) { var i = 0, s; r = t.lowercase(r); if (r) for (i = v.length - 1; i >= 0; i--) if (v[i] == r) break; if (i >= 0) { for (s = v.length - 1; s >= i; s--) if (n.end) n.end(v[s]); v.length = i } } var i, s, d, v = [], g = e; v.last = function () { return v[v.length - 1] }; while (e) { s = true; if (!v.last() || !S[v.last()]) { if (e.indexOf("<!--") === 0) { i = e.indexOf("--", 4); if (i >= 0 && e.lastIndexOf("-->", i) === i) { if (n.comment) n.comment(e.substring(4, i)); e = e.substring(i + 3); s = false } } else if (h.test(e)) { d = e.match(h); if (d) { e = e.replace(d[0], ""); s = false } } else if (l.test(e)) { d = e.match(u); if (d) { e = e.substring(d[0].length); d[0].replace(u, T); s = false } } else if (f.test(e)) { d = e.match(o); if (d) { e = e.substring(d[0].length); d[0].replace(o, x); s = false } } if (s) { i = e.indexOf("<"); var y = i < 0 ? e : e.substring(0, i); e = i < 0 ? "" : e.substring(i); if (n.chars) n.chars(O(y)) } } else { e = e.replace(new RegExp("(.*)<\\s*\\/\\s*" + v.last() + "[^>]*>", "i"), function (e, t) { t = t.replace(c, "$1").replace(p, "$1"); if (n.chars) n.chars(O(t)); return "" }); T("", v.last()) } if (e == g) { throw r("badparse", "The sanitizer was unable to parse the following block " + "of html: {0}", e) } g = e } T() } function O(e) { if (!e) { return "" } var t = A.exec(e); var n = t[1]; var r = t[3]; var i = t[2]; if (i) { L.innerHTML = i.replace(/</g, "&lt;"); i = "textContent" in L ? L.textContent : L.innerText } return n + i + r } function M(e) { return e.replace(/&/g, "&").replace(d, function (e) { var t = e.charCodeAt(0); var n = e.charCodeAt(1); return "&#" + ((t - 55296) * 1024 + (n - 56320) + 65536) + ";" }).replace(v, function (e) { var t = e.charCodeAt(0); if (t <= 159 || t == 173 || t >= 1536 && t <= 1540 || t == 1807 || t == 6068 || t == 6069 || t >= 8204 && t <= 8207 || t >= 8232 && t <= 8239 || t >= 8288 && t <= 8303 || t == 65279 || t >= 65520 && t <= 65535) return "&#" + t + ";"; return e }).replace(/</g, "&lt;").replace(/>/g, "&gt;") } function D(e) { var n = ""; var r = e.split(";"); t.forEach(r, function (e) { var r = e.split(":"); if (r.length == 2) { var i = _(t.lowercase(r[0])); var e = _(t.lowercase(r[1])); if (i === "color" && (e.match(/^rgb\([0-9%,\. ]*\)$/i) || e.match(/^rgba\([0-9%,\. ]*\)$/i) || e.match(/^hsl\([0-9%,\. ]*\)$/i) || e.match(/^hsla\([0-9%,\. ]*\)$/i) || e.match(/^#[0-9a-f]{3,6}$/i) || e.match(/^[a-z]*$/i)) || i === "text-align" && (e === "left" || e === "right" || e === "center" || e === "justify") || i === "float" && (e === "left" || e === "right" || e === "none") || (i === "width" || i === "height" || i === "max-width") && e.match(/[0-9\.]*(px|em|rem|%)/)) n += i + ": " + e + ";" } }); return n } function P(e, t, n, r) { if (e === "img" && t["ta-insert-video"]) { if (n === "ta-insert-video" || n === "allowfullscreen" || n === "frameborder" || n === "contenteditble" && r === "false") return true } else if (e === "img" && n === "contenteditble") { return true } return false } function H(e, n) { var r = false; var i = t.bind(e, e.push); return { start: function (e, s, o) { e = t.lowercase(e); if (!r && S[e]) { r = e } if (!r && x[e] === true) { i("<"); i(e); t.forEach(s, function (r, o) { var u = t.lowercase(o); var a = e === "img" && u === "src" || u === "background"; if (u === "style" && (r = D(r)) !== "" || P(e, s, u, r) || N[u] === true && (T[u] !== true || n(r, a))) { i(" "); i(o); i('="'); i(M(r)); i('"') } }); i(o ? "/>" : ">") } }, end: function (e) { e = t.lowercase(e); if (!r && x[e] === true) { i("</"); i(e); i(">") } if (e == r) { r = false } }, chars: function (e) { if (!r) { i(M(e)) } } } } var r = t.$$minErr("$sanitize"); var o = /^<\s*([\w:-]+)((?:\s+[\w:-]+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)\s*>/, u = /^<\s*\/\s*([\w:-]+)[^>]*>/, a = /([\w:-]+)(?:\s*=\s*(?:(?:"((?:[^"])*)")|(?:'((?:[^'])*)')|([^>\s]+)))?/g, f = /^</, l = /^<\s*\//, c = /<!--(.*?)-->/g, h = /<!DOCTYPE([^>]*?)>/i, p = /<!\[CDATA\[(.*?)]]>/g, d = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g, v = /([^\#-~| |!])/g; var m = C("area,br,col,hr,img,wbr"); var g = C("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"), y = C("rp,rt"), b = t.extend({}, y, g); var w = t.extend({}, g, C("address,article," + "aside,blockquote,caption,center,del,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5," + "h6,header,hgroup,hr,ins,map,menu,nav,ol,pre,script,section,table,ul")); var E = t.extend({}, y, C("a,abbr,acronym,b," + "bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,q,ruby,rp,rt,s," + "samp,small,span,strike,strong,sub,sup,time,tt,u,var")); var S = C("script,style"); var x = t.extend({}, m, w, E, b); var T = C("background,cite,href,longdesc,src,usemap"); var N = t.extend({}, T, C("abbr,align,alt,axis,bgcolor,border,cellpadding,cellspacing,class,clear," + "color,cols,colspan,compact,coords,dir,face,headers,height,hreflang,hspace," + "ismap,lang,language,nohref,nowrap,rel,rev,rows,rowspan,rules," + "scope,scrolling,shape,size,span,start,summary,target,title,type," + "valign,value,vspace,width")); var L = document.createElement("pre"); var A = /^(\s*)([\s\S]*?)(\s*)$/; var _ = function () { if (!String.prototype.trim) { return function (e) { return t.isString(e) ? e.replace(/^\s\s*/, "").replace(/\s\s*$/, "") : e } } return function (e) { return t.isString(e) ? e.trim() : e } }(); t.module("ngSanitize", []).provider("$sanitize", i); t.module("ngSanitize").filter("linky", ["$sanitize", function (e) { var n = /((ftp|https?):\/\/|(mailto:)?[A-Za-z0-9._%+-]+@)\S*[^\s.;,(){}<>]/, r = /^mailto:/; return function (i, o) { function h(e) { if (!e) { return } f.push(s(e)) } function p(e, n) { f.push("<a "); if (t.isDefined(o)) { f.push('target="'); f.push(o); f.push('" ') } f.push('href="'); f.push(e); f.push('">'); h(n); f.push("</a>") } if (!i) return i; var u; var a = i; var f = []; var l; var c; while (u = a.match(n)) { l = u[0]; if (u[2] == u[3]) l = "mailto:" + l; c = u.index; h(a.substr(0, c)); p(l, u[0].replace(r, "")); a = a.substring(c + u[0].length) } h(a); return e(f.join("")) } }]) })(window, window.angular)