<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Softwrench Load Test" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Users Config" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="users" elementType="Argument">
            <stringProp name="Argument.name">users</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rampup" elementType="Argument">
            <stringProp name="Argument.name">rampup</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="loop" elementType="Argument">
            <stringProp name="Argument.name">loop</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Admin Login Config" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">swadmin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">sw@dm1n</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Tina Login Config" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">tcottier</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">password</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Local Config" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="cpath" elementType="Argument">
            <stringProp name="Argument.name">cpath</stringProp>
            <stringProp name="Argument.value">/sw4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="server" elementType="Argument">
            <stringProp name="Argument.name">server</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">8080</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Dev Config" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="cpath" elementType="Argument">
            <stringProp name="Argument.name">cpath</stringProp>
            <stringProp name="Argument.value">/otb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="server" elementType="Argument">
            <stringProp name="Argument.name">server</stringProp>
            <stringProp name="Argument.value">dev.softwrench.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">80</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Chicago QA Config" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="cpath" elementType="Argument">
            <stringProp name="Argument.name">cpath</stringProp>
            <stringProp name="Argument.value">/chicago</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="server" elementType="Argument">
            <stringProp name="Argument.name">server</stringProp>
            <stringProp name="Argument.value">qa.softwrench.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">80</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${server}</stringProp>
        <stringProp name="HTTPSampler.port">${port}</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <stringProp name="CookieManager.policy">standard</stringProp>
        <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
      </CookieManager>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Cached Schemas HTTP Header" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">cachedschemas</stringProp>
            <stringProp name="Header.value">;systeminitMillis;quickservicerequest.quicksrgrid;quickservicerequest.quickeditdetail;</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">requesttime</stringProp>
            <stringProp name="Header.value">1465502607475</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">currentmetadata</stringProp>
            <stringProp name="Header.value"></stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">currentmodule</stringProp>
            <stringProp name="Header.value"></stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">currentprofile</stringProp>
            <stringProp name="Header.value">2</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Service Request Grid Use Case" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${loop}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${users}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampup}</stringProp>
        <longProp name="ThreadGroup.start_time">1465400759000</longProp>
        <longProp name="ThreadGroup.end_time">1465400759000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="All" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="userName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${username}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">userName</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cpath}/SignIn</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="All But Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Grid" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/data/servicerequest?popupmode=&amp;applicationName=servicerequest&amp;key%5BschemaId%5D=list&amp;key%5Bmode%5D=input&amp;key%5Bplatform%5D=web&amp;currentSchemaKey=list&amp;SearchDTO%5BAddPreSelectedFilters%5D=true&amp;SearchDTO%5BpageSize%5D=30&amp;title=Service+Request+Grid</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                  </value>
                </objProp>
                <stringProp name="filename">C:\Users\emesquita\Desktop\JMeter Users.jmx</stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Filter Options" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/generic/FilterData/GetFilterOptions?application=servicerequest&amp;key%5BapplicationName%5D=servicerequest&amp;key%5BschemaId%5D=list&amp;key%5Bmode%5D=input&amp;key%5Bplatform%5D=web&amp;labelSearchString=&amp;filterProvider=synstatus_.description&amp;filterAttribute=status</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                  </value>
                </objProp>
                <stringProp name="filename">C:\Users\emesquita\Desktop\JMeter Users.jmx</stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Quick Request Grid Use Case" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${loop}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${users}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampup}</stringProp>
        <longProp name="ThreadGroup.start_time">1465400759000</longProp>
        <longProp name="ThreadGroup.end_time">1465400759000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="All" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="userName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${username}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">userName</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cpath}/SignIn</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="All But Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Grid" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/data/quickservicerequest?SearchDTO%5BsearchParams%5D=&amp;SearchDTO%5BsearchValues%5D=&amp;SearchDTO%5BsearchSort%5D=sr.ticketuid+desc&amp;SearchDTO%5BSearchAscending%5D=false&amp;SearchDTO%5BfilterFixedWhereClause%5D=&amp;SearchDTO%5BneedsCountUpdate%5D=true&amp;SearchDTO%5BsearchTemplate%5D=&amp;SearchDTO%5BpageNumber%5D=1&amp;SearchDTO%5BpageSize%5D=30&amp;popupmode=&amp;applicationName=quickservicerequest&amp;key%5BschemaId%5D=quicksrgrid&amp;key%5Bmode%5D=input&amp;key%5Bplatform%5D=web&amp;currentSchemaKey=quicksrgrid&amp;title=Quick+Request+Grid</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                  </value>
                </objProp>
                <stringProp name="filename">C:\Users\emesquita\Desktop\JMeter Users.jmx</stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Filter Options" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/generic/FilterData/GetFilterOptions?application=quickservicerequest&amp;key%5BapplicationName%5D=quickservicerequest&amp;key%5BschemaId%5D=quicksrgrid&amp;key%5Bmode%5D=input&amp;key%5Bplatform%5D=web&amp;labelSearchString=&amp;filterProvider=synstatus_.description&amp;filterAttribute=status</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                  </value>
                </objProp>
                <stringProp name="filename">C:\Users\emesquita\Desktop\JMeter Users.jmx</stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Service Request Detail Use Case" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${loop}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${users}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampup}</stringProp>
        <longProp name="ThreadGroup.start_time">1465408189000</longProp>
        <longProp name="ThreadGroup.end_time">1465408189000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="All" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="userName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${username}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">userName</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cpath}/SignIn</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="All But Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Detail" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/data/quickservicerequest?id=1709&amp;popupmode=&amp;autoloadcomposition=&amp;printMode=&amp;key%5BschemaId%5D=quickeditdetail&amp;key%5Bmode%5D=input&amp;key%5Bplatform%5D=web</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Associations" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;changedate&quot;:&quot;06/09/2016 12:42&quot;,&quot;classificationid&quot;:&quot;GENERAL ASSISTANCE&quot;,&quot;reportedemail&quot;:&quot;tcottier@controltechnologysolutions.com&quot;,&quot;affectedemail&quot;:&quot;tcottier@controltechnologysolutions.com&quot;,&quot;solution&quot;:null,&quot;assetsiteid&quot;:&quot;NASP&quot;,&quot;assetnum&quot;:null,&quot;failurecode&quot;:null,&quot;cinum&quot;:null,&quot;class&quot;:&quot;SR&quot;,&quot;ticketuid&quot;:1709,&quot;ticketid&quot;:&quot;1567&quot;,&quot;description&quot;:&quot;Dept of Tina testing&quot;,&quot;reportedphone&quot;:&quot;480-941-6482&quot;,&quot;reportdate&quot;:&quot;2016-06-09T12:39:24&quot;,&quot;status&quot;:&quot;QUEUED&quot;,&quot;reportedby&quot;:&quot;TCOTTIER&quot;,&quot;siteid&quot;:&quot;NASP&quot;,&quot;department&quot;:&quot;DoF&quot;,&quot;tickettype&quot;:&quot;Requesting eligibility for a CSAR or a DOF review&quot;,&quot;rowstamp&quot;:5043868,&quot;ld_.ldtext&quot;:null}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/generic/Association/GetSchemaOptions?key%5BapplicationName%5D=servicerequest&amp;key%5BschemaId%5D=editdetail&amp;key%5Bmode%5D=input&amp;key%5Bplatform%5D=web&amp;showmore=false</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="JSON HTTP Header" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Compositions" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;application&quot;:&quot;quickservicerequest&quot;,&quot;request&quot;:{&quot;key&quot;:{&quot;schemaId&quot;:&quot;quickeditdetail&quot;,&quot;mode&quot;:&quot;input&quot;,&quot;platform&quot;:&quot;web&quot;},&quot;id&quot;:1709,&quot;paginatedSearch&quot;:{&quot;searchParams&quot;:&quot;&quot;,&quot;searchValues&quot;:&quot;&quot;,&quot;searchSort&quot;:&quot;&quot;,&quot;SearchAscending&quot;:false,&quot;needsCountUpdate&quot;:true,&quot;pageNumber&quot;:1,&quot;pageSize&quot;:10,&quot;totalCount&quot;:0,&quot;paginationOptions&quot;:[0,10,30]},&quot;compositionList&quot;:[&quot;worklog_&quot;,&quot;attachment_&quot;]},&quot;data&quot;:{&quot;changedate&quot;:&quot;06/09/2016 12:42&quot;,&quot;classificationid&quot;:&quot;GENERAL ASSISTANCE&quot;,&quot;reportedemail&quot;:&quot;tcottier@controltechnologysolutions.com&quot;,&quot;affectedemail&quot;:&quot;tcottier@controltechnologysolutions.com&quot;,&quot;solution&quot;:null,&quot;assetsiteid&quot;:&quot;NASP&quot;,&quot;assetnum&quot;:null,&quot;failurecode&quot;:null,&quot;cinum&quot;:null,&quot;class&quot;:&quot;SR&quot;,&quot;ticketuid&quot;:1709,&quot;ticketid&quot;:&quot;1567&quot;,&quot;description&quot;:&quot;Dept of Tina testing&quot;,&quot;reportedphone&quot;:&quot;480-941-6482&quot;,&quot;reportdate&quot;:&quot;2016-06-09T12:39:24&quot;,&quot;status&quot;:&quot;QUEUED&quot;,&quot;reportedby&quot;:&quot;TCOTTIER&quot;,&quot;siteid&quot;:&quot;NASP&quot;,&quot;department&quot;:&quot;DoF&quot;,&quot;tickettype&quot;:&quot;Requesting eligibility for a CSAR or a DOF review&quot;,&quot;rowstamp&quot;:5043868,&quot;ld_.ldtext&quot;:null}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/generic/Composition/GetCompositionData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="JSON HTTP Header" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Lookup" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;changedate&quot;:&quot;06/09/2016 12:42&quot;,&quot;classificationid&quot;:&quot;GENERAL ASSISTANCE&quot;,&quot;reportedemail&quot;:&quot;tcottier@controltechnologysolutions.com&quot;,&quot;affectedemail&quot;:&quot;tcottier@controltechnologysolutions.com&quot;,&quot;solution&quot;:null,&quot;assetsiteid&quot;:&quot;NASP&quot;,&quot;assetnum&quot;:null,&quot;failurecode&quot;:null,&quot;cinum&quot;:null,&quot;class&quot;:&quot;SR&quot;,&quot;ticketuid&quot;:1709,&quot;ticketid&quot;:&quot;1567&quot;,&quot;description&quot;:&quot;Dept of Tina testing&quot;,&quot;reportedphone&quot;:&quot;480-941-6482&quot;,&quot;reportdate&quot;:&quot;06/09/2016 12:39&quot;,&quot;status&quot;:&quot;QUEUED&quot;,&quot;reportedby&quot;:&quot;TCOTTIER&quot;,&quot;siteid&quot;:&quot;NASP&quot;,&quot;department&quot;:&quot;DoF&quot;,&quot;tickettype&quot;:&quot;Requesting eligibility for a CSAR or a DOF review&quot;,&quot;rowstamp&quot;:5043868,&quot;ld_.ldtext&quot;:null,&quot;attachment_&quot;:[],&quot;worklog_&quot;:[]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/generic/Association/LookupSingleAssociation?key%5BapplicationName%5D=quickservicerequest&amp;key%5BschemaId%5D=quickeditdetail&amp;key%5Bmode%5D=input&amp;key%5Bplatform%5D=web&amp;associationKey=DEPARTMENT_&amp;associationValue=DoF</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="JSON HTTP Header" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                </value>
              </objProp>
              <stringProp name="filename">C:\Users\emesquita\Desktop\JMeter Users.jmx</stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Quick Request Detail Use Case" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${loop}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${users}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampup}</stringProp>
        <longProp name="ThreadGroup.start_time">1465408189000</longProp>
        <longProp name="ThreadGroup.end_time">1465408189000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="All" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="userName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${username}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">userName</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cpath}/SignIn</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="All But Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Detail" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/data/quickservicerequest?id=1711&amp;popupmode=&amp;autoloadcomposition=&amp;printMode=&amp;key%5BschemaId%5D=quickeditdetail&amp;key%5Bmode%5D=input&amp;key%5Bplatform%5D=web</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Associations" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;changedate&quot;:&quot;06/09/2016 12:55&quot;,&quot;classificationid&quot;:&quot;GENERAL ASSISTANCE&quot;,&quot;reportedemail&quot;:&quot;tcottier@controltechnologysolutions.com&quot;,&quot;affectedemail&quot;:&quot;tcottier@controltechnologysolutions.com&quot;,&quot;solution&quot;:null,&quot;assetsiteid&quot;:&quot;NASP&quot;,&quot;assetnum&quot;:null,&quot;failurecode&quot;:null,&quot;cinum&quot;:null,&quot;class&quot;:&quot;SR&quot;,&quot;ticketuid&quot;:1711,&quot;ticketid&quot;:&quot;1569&quot;,&quot;description&quot;:&quot;testing&quot;,&quot;reportedphone&quot;:&quot;480-941-6482&quot;,&quot;reportdate&quot;:&quot;2016-06-09T12:54:11&quot;,&quot;status&quot;:&quot;QUEUED&quot;,&quot;reportedby&quot;:&quot;TCOTTIER&quot;,&quot;siteid&quot;:&quot;NASP&quot;,&quot;department&quot;:&quot;Tina Dept&quot;,&quot;tickettype&quot;:&quot;Requesting a Hearing&quot;,&quot;rowstamp&quot;:5043955,&quot;ld_.ldtext&quot;:null}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/generic/Association/GetSchemaOptions?key%5BapplicationName%5D=quickservicerequest&amp;key%5BschemaId%5D=quickeditdetail&amp;key%5Bmode%5D=input&amp;key%5Bplatform%5D=web&amp;showmore=false</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="JSON HTTP Header" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Compositions" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;application&quot;:&quot;quickservicerequest&quot;,&quot;request&quot;:{&quot;key&quot;:{&quot;schemaId&quot;:&quot;quickeditdetail&quot;,&quot;mode&quot;:&quot;input&quot;,&quot;platform&quot;:&quot;web&quot;},&quot;id&quot;:1711,&quot;paginatedSearch&quot;:{&quot;searchParams&quot;:&quot;&quot;,&quot;searchValues&quot;:&quot;&quot;,&quot;searchSort&quot;:&quot;&quot;,&quot;SearchAscending&quot;:false,&quot;needsCountUpdate&quot;:true,&quot;pageNumber&quot;:1,&quot;pageSize&quot;:10,&quot;totalCount&quot;:0,&quot;paginationOptions&quot;:[0,10,30]},&quot;compositionList&quot;:[&quot;worklog_&quot;,&quot;attachment_&quot;]},&quot;data&quot;:{&quot;changedate&quot;:&quot;06/09/2016 12:55&quot;,&quot;classificationid&quot;:&quot;GENERAL ASSISTANCE&quot;,&quot;reportedemail&quot;:&quot;tcottier@controltechnologysolutions.com&quot;,&quot;affectedemail&quot;:&quot;tcottier@controltechnologysolutions.com&quot;,&quot;solution&quot;:null,&quot;assetsiteid&quot;:&quot;NASP&quot;,&quot;assetnum&quot;:null,&quot;failurecode&quot;:null,&quot;cinum&quot;:null,&quot;class&quot;:&quot;SR&quot;,&quot;ticketuid&quot;:1711,&quot;ticketid&quot;:&quot;1569&quot;,&quot;description&quot;:&quot;testing&quot;,&quot;reportedphone&quot;:&quot;480-941-6482&quot;,&quot;reportdate&quot;:&quot;2016-06-09T12:54:11&quot;,&quot;status&quot;:&quot;QUEUED&quot;,&quot;reportedby&quot;:&quot;TCOTTIER&quot;,&quot;siteid&quot;:&quot;NASP&quot;,&quot;department&quot;:&quot;Tina Dept&quot;,&quot;tickettype&quot;:&quot;Requesting a Hearing&quot;,&quot;rowstamp&quot;:5043955,&quot;ld_.ldtext&quot;:null}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/generic/Composition/GetCompositionData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="JSON HTTP Header" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Lookup" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;changedate&quot;:&quot;06/09/2016 12:55&quot;,&quot;classificationid&quot;:&quot;GENERAL ASSISTANCE&quot;,&quot;reportedemail&quot;:&quot;tcottier@controltechnologysolutions.com&quot;,&quot;affectedemail&quot;:&quot;tcottier@controltechnologysolutions.com&quot;,&quot;solution&quot;:null,&quot;assetsiteid&quot;:&quot;NASP&quot;,&quot;assetnum&quot;:null,&quot;failurecode&quot;:null,&quot;cinum&quot;:null,&quot;class&quot;:&quot;SR&quot;,&quot;ticketuid&quot;:1711,&quot;ticketid&quot;:&quot;1569&quot;,&quot;description&quot;:&quot;testing&quot;,&quot;reportedphone&quot;:&quot;480-941-6482&quot;,&quot;reportdate&quot;:&quot;06/09/2016 12:54&quot;,&quot;status&quot;:&quot;QUEUED&quot;,&quot;reportedby&quot;:&quot;TCOTTIER&quot;,&quot;siteid&quot;:&quot;NASP&quot;,&quot;department&quot;:&quot;Tina Dept&quot;,&quot;tickettype&quot;:&quot;Requesting a Hearing&quot;,&quot;rowstamp&quot;:5043955,&quot;ld_.ldtext&quot;:null,&quot;attachment_&quot;:[],&quot;worklog_&quot;:[]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/generic/Association/LookupSingleAssociation?key%5BapplicationName%5D=quickservicerequest&amp;key%5BschemaId%5D=quickeditdetail&amp;key%5Bmode%5D=input&amp;key%5Bplatform%5D=web&amp;associationKey=DEPARTMENT_&amp;associationValue=Tina+Dept</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="JSON HTTP Header" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                </value>
              </objProp>
              <stringProp name="filename">C:\Users\emesquita\Desktop\JMeter Users.jmx</stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Service Request New Use Case" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${loop}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${users}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampup}</stringProp>
        <longProp name="ThreadGroup.start_time">1465408189000</longProp>
        <longProp name="ThreadGroup.end_time">1465408189000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="All" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="userName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${username}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">userName</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cpath}/SignIn</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="All But Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Save New" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;json&quot;:{&quot;ismticketid&quot;:null,&quot;ismticketuid&quot;:null,&quot;description&quot;:&quot;Load Test&quot;,&quot;status&quot;:&quot;NEW&quot;,&quot;externalsystem&quot;:&quot;EMAIL&quot;,&quot;siteid&quot;:&quot;NASP&quot;,&quot;ld_.ldtext&quot;:&quot;&lt;p&gt;Load Test&lt;/p&gt;&quot;,&quot;reportedby&quot;:&quot;tcottier&quot;,&quot;affectedperson&quot;:&quot;tcottier&quot;,&quot;createdby&quot;:&quot;tcottier&quot;,&quot;owner&quot;:&quot;TCOTTIER&quot;,&quot;reportedphone&quot;:&quot;480-941-6482&quot;,&quot;itdresolvergroup&quot;:&quot;G_EXT_SD&quot;,&quot;itdchcreatedbygroup&quot;:&quot;G_EXT_SD&quot;,&quot;ownergroup&quot;:&quot;G_EXT_SD&quot;,&quot;tickettype&quot;:&quot;CANVAS Developer support (iRFS)&quot;,&quot;classificationid&quot;:&quot;AGENT 1&quot;,&quot;impact&quot;:4,&quot;urgency&quot;:4,&quot;internalpriority&quot;:4,&quot;reportedpriority&quot;:&quot;4&quot;,&quot;department&quot;:&quot;DoF&quot;,&quot;itdfirstcallresolution&quot;:true,&quot;pluspcustomer&quot;:&quot;CPS-00&quot;,&quot;reportdate&quot;:&quot;06/09/2016 14:17:47&quot;,&quot;affecteddate&quot;:&quot;06/09/2016 14:17:47&quot;,&quot;actualstart&quot;:null,&quot;actualfinish&quot;:null,&quot;changedate&quot;:&quot;&quot;,&quot;changeby&quot;:&quot;tcottier&quot;,&quot;statusdate&quot;:null,&quot;itdclosedate&quot;:null,&quot;outageduration&quot;:null,&quot;itdclosurecode&quot;:&quot;NO ACTION&quot;,&quot;creationdate&quot;:&quot;06/09/2016 14:18:42&quot;,&quot;reportedbyp_.langcode&quot;:&quot;EN&quot;,&quot;targetstart&quot;:&quot;06/09/2016 00:00:00&quot;,&quot;targetfinish&quot;:&quot;06/10/2016 00:00:00&quot;,&quot;location&quot;:&quot;NASP&quot;,&quot;assetnum&quot;:null,&quot;isglobal&quot;:true,&quot;slaapplied&quot;:false,&quot;isknownerror&quot;:true,&quot;sitevisit&quot;:true,&quot;ticketid&quot;:null,&quot;ticketuid&quot;:null,&quot;asset_.location&quot;:null},&quot;requestData&quot;:{&quot;id&quot;:null,&quot;userId&quot;:null,&quot;applicationName&quot;:&quot;servicerequest&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;currentSchemaKey&quot;:&quot;newdetail.input.web&quot;,&quot;routeParametersDTO&quot;:{&quot;checkPointData&quot;:[{&quot;listContext&quot;:{&quot;searchParams&quot;:&quot;&quot;,&quot;searchValues&quot;:&quot;&quot;,&quot;searchSort&quot;:&quot;sr.ticketuid desc&quot;,&quot;SearchAscending&quot;:false,&quot;filterFixedWhereClause&quot;:null,&quot;needsCountUpdate&quot;:true,&quot;quickSearchDTO&quot;:{&quot;compositionsToInclude&quot;:[]},&quot;searchTemplate&quot;:null,&quot;pageNumber&quot;:1,&quot;pageSize&quot;:30},&quot;applicationKey&quot;:&quot;servicerequest.list&quot;}]}}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/data/servicerequest/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="JSON HTTP Header" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Associations" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ismticketid&quot;:&quot;1386&quot;,&quot;ismticketuid&quot;:1210,&quot;description&quot;:&quot;Load Test&quot;,&quot;siteid&quot;:&quot;NASP&quot;,&quot;createdby&quot;:&quot;TCOTTIER&quot;,&quot;reportedphone&quot;:&quot;480-941-6482&quot;,&quot;internalpriority&quot;:4,&quot;itdfirstcallresolution&quot;:1,&quot;pluspcustomer&quot;:&quot;CPS-00&quot;,&quot;reportdate&quot;:&quot;2016-06-09T14:17:47-07:00&quot;,&quot;affecteddate&quot;:&quot;2016-06-09T14:17:47-07:00&quot;,&quot;actualstart&quot;:null,&quot;actualfinish&quot;:null,&quot;changedate&quot;:&quot;2016-06-09T14:19:18-07:00&quot;,&quot;changeby&quot;:&quot;TCOTTIER&quot;,&quot;statusdate&quot;:&quot;2016-06-09T14:19:14-07:00&quot;,&quot;itdclosedate&quot;:null,&quot;outageduration&quot;:0,&quot;creationdate&quot;:&quot;2016-06-09T14:18:42-07:00&quot;,&quot;targetstart&quot;:&quot;2016-06-09T00:00:00-07:00&quot;,&quot;targetfinish&quot;:&quot;2016-06-10T00:00:00-07:00&quot;,&quot;isglobal&quot;:1,&quot;isknownerror&quot;:1,&quot;sitevisit&quot;:1,&quot;ticketid&quot;:&quot;1573&quot;,&quot;ticketuid&quot;:1715,&quot;solution&quot;:null,&quot;selfservsolaccess&quot;:0,&quot;externalsystem&quot;:&quot;EMAIL&quot;,&quot;reportedby&quot;:&quot;TCOTTIER&quot;,&quot;affectedperson&quot;:&quot;TCOTTIER&quot;,&quot;owner&quot;:&quot;TCOTTIER&quot;,&quot;itdresolvergroup&quot;:&quot;G_EXT_SD&quot;,&quot;itdchcreatedbygroup&quot;:&quot;G_EXT_SD&quot;,&quot;ownergroup&quot;:&quot;G_EXT_SD&quot;,&quot;tickettype&quot;:&quot;CANVAS Developer support (iRFS)&quot;,&quot;classificationid&quot;:&quot;AGENT 1&quot;,&quot;impact&quot;:4,&quot;urgency&quot;:4,&quot;reportedpriority&quot;:4,&quot;itdclosurecode&quot;:&quot;NO ACTION&quot;,&quot;location&quot;:&quot;NASP&quot;,&quot;assetnum&quot;:null,&quot;status&quot;:&quot;QUEUED&quot;,&quot;rowstamp&quot;:5045095,&quot;solution_.description&quot;:null,&quot;ld_.ldtext&quot;:&quot;&lt;p&gt;Load Test&lt;/p&gt;&quot;,&quot;symptom_.ldtext&quot;:null,&quot;cause_.ldtext&quot;:null,&quot;resolution_.ldtext&quot;:null}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/generic/Association/GetSchemaOptions?key%5BapplicationName%5D=servicerequest&amp;key%5BschemaId%5D=editdetail&amp;key%5Bmode%5D=input&amp;key%5Bplatform%5D=web&amp;showmore=false</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="JSON HTTP Header" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Compositions" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;application&quot;:&quot;servicerequest&quot;,&quot;request&quot;:{&quot;key&quot;:{&quot;schemaId&quot;:&quot;editdetail&quot;,&quot;mode&quot;:&quot;input&quot;,&quot;platform&quot;:&quot;web&quot;},&quot;id&quot;:1715,&quot;paginatedSearch&quot;:{&quot;searchParams&quot;:&quot;&quot;,&quot;searchValues&quot;:&quot;&quot;,&quot;searchSort&quot;:&quot;&quot;,&quot;SearchAscending&quot;:false,&quot;needsCountUpdate&quot;:true,&quot;pageNumber&quot;:1,&quot;pageSize&quot;:10,&quot;totalCount&quot;:0,&quot;paginationOptions&quot;:[0,10,30]},&quot;compositionList&quot;:[&quot;relatedrecord_&quot;,&quot;worklog_&quot;,&quot;commlog_&quot;,&quot;attachment_&quot;,&quot;aticket_&quot;]},&quot;data&quot;:{&quot;ismticketid&quot;:&quot;1386&quot;,&quot;ismticketuid&quot;:1210,&quot;description&quot;:&quot;Load Test&quot;,&quot;siteid&quot;:&quot;NASP&quot;,&quot;createdby&quot;:&quot;TCOTTIER&quot;,&quot;reportedphone&quot;:&quot;480-941-6482&quot;,&quot;internalpriority&quot;:4,&quot;itdfirstcallresolution&quot;:1,&quot;pluspcustomer&quot;:&quot;CPS-00&quot;,&quot;reportdate&quot;:&quot;2016-06-09T14:17:47-07:00&quot;,&quot;affecteddate&quot;:&quot;2016-06-09T14:17:47-07:00&quot;,&quot;actualstart&quot;:null,&quot;actualfinish&quot;:null,&quot;changedate&quot;:&quot;2016-06-09T14:19:18-07:00&quot;,&quot;changeby&quot;:&quot;TCOTTIER&quot;,&quot;statusdate&quot;:&quot;2016-06-09T14:19:14-07:00&quot;,&quot;itdclosedate&quot;:null,&quot;outageduration&quot;:0,&quot;creationdate&quot;:&quot;2016-06-09T14:18:42-07:00&quot;,&quot;targetstart&quot;:&quot;2016-06-09T00:00:00-07:00&quot;,&quot;targetfinish&quot;:&quot;2016-06-10T00:00:00-07:00&quot;,&quot;isglobal&quot;:1,&quot;isknownerror&quot;:1,&quot;sitevisit&quot;:1,&quot;ticketid&quot;:&quot;1573&quot;,&quot;ticketuid&quot;:1715,&quot;solution&quot;:null,&quot;selfservsolaccess&quot;:0,&quot;externalsystem&quot;:&quot;EMAIL&quot;,&quot;reportedby&quot;:&quot;TCOTTIER&quot;,&quot;affectedperson&quot;:&quot;TCOTTIER&quot;,&quot;owner&quot;:&quot;TCOTTIER&quot;,&quot;itdresolvergroup&quot;:&quot;G_EXT_SD&quot;,&quot;itdchcreatedbygroup&quot;:&quot;G_EXT_SD&quot;,&quot;ownergroup&quot;:&quot;G_EXT_SD&quot;,&quot;tickettype&quot;:&quot;CANVAS Developer support (iRFS)&quot;,&quot;classificationid&quot;:&quot;AGENT 1&quot;,&quot;impact&quot;:4,&quot;urgency&quot;:4,&quot;reportedpriority&quot;:4,&quot;itdclosurecode&quot;:&quot;NO ACTION&quot;,&quot;location&quot;:&quot;NASP&quot;,&quot;assetnum&quot;:null,&quot;status&quot;:&quot;QUEUED&quot;,&quot;rowstamp&quot;:5045095,&quot;solution_.description&quot;:null,&quot;ld_.ldtext&quot;:&quot;&lt;p&gt;Load Test&lt;/p&gt;&quot;,&quot;symptom_.ldtext&quot;:null,&quot;cause_.ldtext&quot;:null,&quot;resolution_.ldtext&quot;:null}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/generic/Composition/GetCompositionData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="JSON HTTP Header" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                </value>
              </objProp>
              <stringProp name="filename">C:\Users\emesquita\Desktop\JMeter Users.jmx</stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Service Request New Use Case Dev" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${loop}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${users}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampup}</stringProp>
        <longProp name="ThreadGroup.start_time">1465408189000</longProp>
        <longProp name="ThreadGroup.end_time">1465408189000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="All" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="userName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${username}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">userName</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cpath}/SignIn</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="All But Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Save New" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;json&quot;:{&quot;tophiddenfield&quot;:null,&quot;ticketid&quot;:null,&quot;ticketuid&quot;:null,&quot;description&quot;:&quot;Load Test&quot;,&quot;status&quot;:&quot;NEW&quot;,&quot;siteid&quot;:&quot;DENVER&quot;,&quot;locationhiddenfield&quot;:null,&quot;ld_.ldtext&quot;:&quot;&lt;p&gt;Load Test&lt;/p&gt;&quot;,&quot;actlabcost&quot;:null,&quot;actlabhrs&quot;:null,&quot;orgid&quot;:&quot;EAGLENA&quot;,&quot;createby&quot;:null,&quot;changedate&quot;:null,&quot;classificationid&quot;:null,&quot;reportedemail&quot;:null,&quot;affectedemail&quot;:null,&quot;class&quot;:null,&quot;solution&quot;:null,&quot;assetsiteid&quot;:null,&quot;location&quot;:&quot;CENTRAL&quot;,&quot;assetnum&quot;:&quot;2083&quot;,&quot;failurecode&quot;:null,&quot;cinum&quot;:null,&quot;ownerperson_.displayname&quot;:null,&quot;changeby&quot;:&quot;TCOTTIER&quot;,&quot;owner&quot;:&quot;TCOTTIER&quot;,&quot;ownergroup&quot;:null,&quot;reportedby&quot;:&quot;TCOTTIER&quot;,&quot;reportdate&quot;:&quot;06/10/2016 14:43&quot;,&quot;internalpriority&quot;:&quot;3&quot;,&quot;classstructureid&quot;:&quot;1335&quot;,&quot;affectedperson&quot;:&quot;TCOTTIER&quot;,&quot;newattachment&quot;:null,&quot;sraddress_.description&quot;:&quot;Control Technology Solutions&quot;,&quot;sraddress_.staddrnumber&quot;:null,&quot;sraddress_.staddrstreet&quot;:null,&quot;sraddress_.staddrsttype&quot;:null,&quot;sraddress_.formattedaddress&quot;:null,&quot;saddresscode&quot;:&quot;cts&quot;,&quot;targetstart&quot;:&quot;06/10/2016&quot;,&quot;targetfinish&quot;:&quot;06/11/2016&quot;,&quot;actualstart&quot;:&quot;06/10/2016&quot;,&quot;actualfinish&quot;:&quot;06/11/2016&quot;,&quot;location_.serviceaddress_.latitudey&quot;:null,&quot;location_.serviceaddress_.longitudex&quot;:null,&quot;location_.serviceaddress_.addresscode&quot;:null,&quot;location_.serviceaddress_.description&quot;:null,&quot;location_.serviceaddress_.streetaddress&quot;:null,&quot;location_.serviceaddress_.city&quot;:null,&quot;location_.serviceaddress_.stateprovince&quot;:null,&quot;location_.serviceaddress_.country&quot;:null},&quot;requestData&quot;:{&quot;id&quot;:null,&quot;userId&quot;:null,&quot;applicationName&quot;:&quot;servicerequest&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;currentSchemaKey&quot;:&quot;newdetail.input.web&quot;,&quot;routeParametersDTO&quot;:{&quot;checkPointData&quot;:[{&quot;listContext&quot;:{&quot;searchParams&quot;:&quot;&quot;,&quot;searchValues&quot;:&quot;&quot;,&quot;searchSort&quot;:&quot;sr.ticketuid desc&quot;,&quot;SearchAscending&quot;:false,&quot;filterFixedWhereClause&quot;:null,&quot;needsCountUpdate&quot;:true,&quot;quickSearchDTO&quot;:{&quot;compositionsToInclude&quot;:[]},&quot;searchTemplate&quot;:null,&quot;pageNumber&quot;:1,&quot;pageSize&quot;:30},&quot;applicationKey&quot;:&quot;servicerequest.list&quot;}]}}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/data/servicerequest/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="JSON HTTP Header" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Associations" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;ticketid&quot;:&quot;2411&quot;,&quot;ticketuid&quot;:5000,&quot;description&quot;:&quot;Load Test&quot;,&quot;siteid&quot;:&quot;DENVER&quot;,&quot;actlabcost&quot;:0,&quot;actlabhrs&quot;:0,&quot;orgid&quot;:&quot;EAGLENA&quot;,&quot;changedate&quot;:&quot;2016-06-10T14:44:58-07:00&quot;,&quot;reportedemail&quot;:&quot;tcottier@controltechnologysolutions.com&quot;,&quot;affectedemail&quot;:&quot;tcottier@controltechnologysolutions.com&quot;,&quot;class&quot;:&quot;SR&quot;,&quot;solution&quot;:null,&quot;assetsiteid&quot;:&quot;DENVER&quot;,&quot;location&quot;:&quot;CENTRAL&quot;,&quot;assetnum&quot;:&quot;2083&quot;,&quot;failurecode&quot;:null,&quot;cinum&quot;:null,&quot;changeby&quot;:&quot;TCOTTIER&quot;,&quot;reportdate&quot;:&quot;2016-06-10T14:43:00-07:00&quot;,&quot;targetstart&quot;:&quot;2016-06-10T00:00:00-07:00&quot;,&quot;targetfinish&quot;:&quot;2016-06-11T00:00:00-07:00&quot;,&quot;actualstart&quot;:null,&quot;actualfinish&quot;:&quot;2016-06-11T00:00:00-07:00&quot;,&quot;owner&quot;:&quot;TCOTTIER&quot;,&quot;ownergroup&quot;:null,&quot;reportedby&quot;:&quot;TCOTTIER&quot;,&quot;internalpriority&quot;:3,&quot;classstructureid&quot;:&quot;1335&quot;,&quot;affectedperson&quot;:&quot;TCOTTIER&quot;,&quot;status&quot;:&quot;QUEUED&quot;,&quot;rowstamp&quot;:39249343,&quot;ownerperson_.displayname&quot;:&quot;Tina Cottier&quot;,&quot;ld_.ldtext&quot;:&quot;&lt;p&gt;Load Test&lt;/p&gt;&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/generic/Association/GetSchemaOptions?key%5BapplicationName%5D=servicerequest&amp;key%5BschemaId%5D=editdetail&amp;key%5Bmode%5D=input&amp;key%5Bplatform%5D=web&amp;showmore=false</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="JSON HTTP Header" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Compositions" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;application&quot;:&quot;servicerequest&quot;,&quot;request&quot;:{&quot;key&quot;:{&quot;schemaId&quot;:&quot;editdetail&quot;,&quot;mode&quot;:&quot;input&quot;,&quot;platform&quot;:&quot;web&quot;},&quot;id&quot;:5000,&quot;paginatedSearch&quot;:{&quot;searchParams&quot;:&quot;&quot;,&quot;searchValues&quot;:&quot;&quot;,&quot;searchSort&quot;:&quot;&quot;,&quot;SearchAscending&quot;:false,&quot;needsCountUpdate&quot;:true,&quot;pageNumber&quot;:1,&quot;pageSize&quot;:10,&quot;totalCount&quot;:0,&quot;paginationOptions&quot;:[0,10,30]},&quot;compositionList&quot;:[&quot;worklog_&quot;,&quot;commlog_&quot;,&quot;attachment_&quot;,&quot;relatedrecord_&quot;]},&quot;data&quot;:{&quot;ticketid&quot;:&quot;2411&quot;,&quot;ticketuid&quot;:5000,&quot;description&quot;:&quot;Load Test&quot;,&quot;siteid&quot;:&quot;DENVER&quot;,&quot;actlabcost&quot;:0,&quot;actlabhrs&quot;:0,&quot;orgid&quot;:&quot;EAGLENA&quot;,&quot;changedate&quot;:&quot;2016-06-10T14:44:58-07:00&quot;,&quot;reportedemail&quot;:&quot;tcottier@controltechnologysolutions.com&quot;,&quot;affectedemail&quot;:&quot;tcottier@controltechnologysolutions.com&quot;,&quot;class&quot;:&quot;SR&quot;,&quot;solution&quot;:null,&quot;assetsiteid&quot;:&quot;DENVER&quot;,&quot;location&quot;:&quot;CENTRAL&quot;,&quot;assetnum&quot;:&quot;2083&quot;,&quot;failurecode&quot;:null,&quot;cinum&quot;:null,&quot;changeby&quot;:&quot;TCOTTIER&quot;,&quot;reportdate&quot;:&quot;2016-06-10T14:43:00-07:00&quot;,&quot;targetstart&quot;:&quot;2016-06-10T00:00:00-07:00&quot;,&quot;targetfinish&quot;:&quot;2016-06-11T00:00:00-07:00&quot;,&quot;actualstart&quot;:null,&quot;actualfinish&quot;:&quot;2016-06-11T00:00:00-07:00&quot;,&quot;owner&quot;:&quot;TCOTTIER&quot;,&quot;ownergroup&quot;:null,&quot;reportedby&quot;:&quot;TCOTTIER&quot;,&quot;internalpriority&quot;:3,&quot;classstructureid&quot;:&quot;1335&quot;,&quot;affectedperson&quot;:&quot;TCOTTIER&quot;,&quot;status&quot;:&quot;QUEUED&quot;,&quot;rowstamp&quot;:39249343,&quot;ownerperson_.displayname&quot;:&quot;Tina Cottier&quot;,&quot;ld_.ldtext&quot;:&quot;&lt;p&gt;Load Test&lt;/p&gt;&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/generic/Composition/GetCompositionData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="JSON HTTP Header" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                </value>
              </objProp>
              <stringProp name="filename">C:\Users\emesquita\Desktop\JMeter Users.jmx</stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Service Request Update Use Case" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${loop}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${users}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampup}</stringProp>
        <longProp name="ThreadGroup.start_time">1465408189000</longProp>
        <longProp name="ThreadGroup.end_time">1465408189000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="All" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="userName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${username}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">userName</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cpath}/SignIn</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="All But Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">0</stringProp>
              <stringProp name="CounterConfig.end"></stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">execnumber</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">false</boolProp>
            </CounterConfig>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;json&quot;:{&quot;ismticketid&quot;:&quot;2018&quot;,&quot;ismticketuid&quot;:${__intSum(1906,${execnumber})},&quot;description&quot;:&quot;Load Test&quot;,&quot;siteid&quot;:&quot;NASP&quot;,&quot;createdby&quot;:&quot;TCOTTIER&quot;,&quot;reportedphone&quot;:&quot;480-941-6482&quot;,&quot;internalpriority&quot;:4,&quot;itdfirstcallresolution&quot;:true,&quot;pluspcustomer&quot;:&quot;CPS-00&quot;,&quot;reportdate&quot;:&quot;06/09/2016 14:17:47&quot;,&quot;affecteddate&quot;:&quot;06/09/2016 14:17:47&quot;,&quot;actualstart&quot;:null,&quot;actualfinish&quot;:null,&quot;changedate&quot;:&quot;06/10/2016 12:21:36&quot;,&quot;changeby&quot;:&quot;TCOTTIER&quot;,&quot;statusdate&quot;:&quot;06/10/2016 12:21:35&quot;,&quot;itdclosedate&quot;:null,&quot;outageduration&quot;:0,&quot;creationdate&quot;:&quot;2016-06-09T14:18:42&quot;,&quot;targetstart&quot;:&quot;2016-06-09T00:00:00&quot;,&quot;targetfinish&quot;:&quot;2016-06-10T00:00:00&quot;,&quot;isglobal&quot;:1,&quot;isknownerror&quot;:1,&quot;sitevisit&quot;:1,&quot;ticketid&quot;:&quot;${__intSum(2412,${execnumber})}&quot;,&quot;ticketuid&quot;:${__intSum(2821,${execnumber})},&quot;solution&quot;:null,&quot;selfservsolaccess&quot;:0,&quot;externalsystem&quot;:&quot;EMAIL&quot;,&quot;reportedby&quot;:&quot;TCOTTIER&quot;,&quot;affectedperson&quot;:&quot;TCOTTIER&quot;,&quot;owner&quot;:&quot;TCOTTIER&quot;,&quot;itdresolvergroup&quot;:&quot;G_EXT_SD&quot;,&quot;itdchcreatedbygroup&quot;:&quot;G_EXT_SD&quot;,&quot;ownergroup&quot;:&quot;G_EXT_SD&quot;,&quot;tickettype&quot;:&quot;CANVAS Developer support (iRFS)&quot;,&quot;classificationid&quot;:&quot;AGENT 1&quot;,&quot;impact&quot;:4,&quot;urgency&quot;:4,&quot;reportedpriority&quot;:4,&quot;department&quot;:&quot;DoF&quot;,&quot;itdclosurecode&quot;:&quot;NO ACTION&quot;,&quot;location&quot;:&quot;NASP&quot;,&quot;assetnum&quot;:null,&quot;status&quot;:&quot;QUEUED&quot;,&quot;rowstamp&quot;:5126465,&quot;solution_.description&quot;:null,&quot;ld_.ldtext&quot;:&quot;&lt;p&gt;Load Test&lt;/p&gt;&quot;,&quot;symptom_.ldtext&quot;:null,&quot;cause_.ldtext&quot;:null,&quot;resolution_.ldtext&quot;:null,&quot;reportedbyp_.langcode&quot;:&quot;EN&quot;,&quot;asset_.location&quot;:null,&quot;solution_.symptom_.ldtext&quot;:null,&quot;solution_.cause_.ldtext&quot;:null,&quot;solution_.resolution_.ldtext&quot;:null,&quot;commlog_&quot;:[],&quot;attachment_&quot;:[],&quot;relatedrecord_&quot;:[],&quot;aticket_&quot;:[],&quot;worklog_&quot;:[]},&quot;requestData&quot;:{&quot;id&quot;:${__intSum(2821,${execnumber})},&quot;userId&quot;:&quot;${__intSum(2412,${execnumber})}&quot;,&quot;applicationName&quot;:&quot;servicerequest&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;currentSchemaKey&quot;:&quot;editdetail.input.web&quot;,&quot;routeParametersDTO&quot;:{&quot;checkPointData&quot;:[{&quot;listContext&quot;:{&quot;searchParams&quot;:&quot;&quot;,&quot;searchValues&quot;:&quot;&quot;,&quot;searchSort&quot;:&quot;sr.ticketuid desc&quot;,&quot;SearchAscending&quot;:false,&quot;filterFixedWhereClause&quot;:null,&quot;needsCountUpdate&quot;:true,&quot;quickSearchDTO&quot;:{&quot;compositionsToInclude&quot;:[]},&quot;searchTemplate&quot;:null,&quot;pageNumber&quot;:4,&quot;pageSize&quot;:30},&quot;applicationKey&quot;:&quot;servicerequest.list&quot;}]}}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/data/servicerequest/</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="JSON HTTP Header" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
                <stringProp name="CounterConfig.start">0</stringProp>
                <stringProp name="CounterConfig.end"></stringProp>
                <stringProp name="CounterConfig.incr">1</stringProp>
                <stringProp name="CounterConfig.name">execnumber</stringProp>
                <stringProp name="CounterConfig.format"></stringProp>
                <boolProp name="CounterConfig.per_user">false</boolProp>
              </CounterConfig>
              <hashTree/>
            </hashTree>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                </value>
              </objProp>
              <stringProp name="filename">C:\Users\emesquita\Desktop\JMeter Users.jmx</stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Add Worklog Use Case" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${loop}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${users}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampup}</stringProp>
        <longProp name="ThreadGroup.start_time">1465408189000</longProp>
        <longProp name="ThreadGroup.end_time">1465408189000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="All" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="userName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${username}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">userName</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${cpath}/SignIn</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="All But Login" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
              <stringProp name="CounterConfig.start">0</stringProp>
              <stringProp name="CounterConfig.end"></stringProp>
              <stringProp name="CounterConfig.incr">1</stringProp>
              <stringProp name="CounterConfig.name">execnumber</stringProp>
              <stringProp name="CounterConfig.format"></stringProp>
              <boolProp name="CounterConfig.per_user">false</boolProp>
            </CounterConfig>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Worklog" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;json&quot;:{&quot;ismticketid&quot;:&quot;${__intSum(2018,${execnumber})}&quot;,&quot;ismticketuid&quot;:${__intSum(1906,${execnumber})},&quot;description&quot;:&quot;Load Test&quot;,&quot;siteid&quot;:&quot;NASP&quot;,&quot;createdby&quot;:&quot;TCOTTIER&quot;,&quot;reportedphone&quot;:&quot;480-941-6482&quot;,&quot;internalpriority&quot;:4,&quot;itdfirstcallresolution&quot;:true,&quot;pluspcustomer&quot;:&quot;CPS-00&quot;,&quot;reportdate&quot;:&quot;06/09/2016 14:17:47&quot;,&quot;affecteddate&quot;:&quot;06/09/2016 14:17:47&quot;,&quot;actualstart&quot;:null,&quot;actualfinish&quot;:null,&quot;changedate&quot;:&quot;06/10/2016 12:21:36&quot;,&quot;changeby&quot;:&quot;TCOTTIER&quot;,&quot;statusdate&quot;:&quot;06/10/2016 12:21:35&quot;,&quot;itdclosedate&quot;:null,&quot;outageduration&quot;:0,&quot;creationdate&quot;:&quot;2016-06-09T14:18:42&quot;,&quot;targetstart&quot;:&quot;2016-06-09T00:00:00&quot;,&quot;targetfinish&quot;:&quot;2016-06-10T00:00:00&quot;,&quot;isglobal&quot;:1,&quot;isknownerror&quot;:1,&quot;sitevisit&quot;:1,&quot;ticketid&quot;:&quot;${__intSum(2412,${execnumber})}&quot;,&quot;ticketuid&quot;:${__intSum(2821,${execnumber})},&quot;solution&quot;:null,&quot;selfservsolaccess&quot;:0,&quot;externalsystem&quot;:&quot;EMAIL&quot;,&quot;reportedby&quot;:&quot;TCOTTIER&quot;,&quot;affectedperson&quot;:&quot;TCOTTIER&quot;,&quot;owner&quot;:&quot;TCOTTIER&quot;,&quot;itdresolvergroup&quot;:&quot;G_EXT_SD&quot;,&quot;itdchcreatedbygroup&quot;:&quot;G_EXT_SD&quot;,&quot;ownergroup&quot;:&quot;G_EXT_SD&quot;,&quot;tickettype&quot;:&quot;CANVAS Developer support (iRFS)&quot;,&quot;classificationid&quot;:&quot;AGENT 1&quot;,&quot;impact&quot;:4,&quot;urgency&quot;:4,&quot;reportedpriority&quot;:4,&quot;department&quot;:&quot;DoF&quot;,&quot;itdclosurecode&quot;:&quot;NO ACTION&quot;,&quot;location&quot;:&quot;NASP&quot;,&quot;assetnum&quot;:null,&quot;status&quot;:&quot;QUEUED&quot;,&quot;rowstamp&quot;:5126465,&quot;solution_.description&quot;:null,&quot;ld_.ldtext&quot;:&quot;&lt;p&gt;Load Test&lt;/p&gt;&quot;,&quot;symptom_.ldtext&quot;:null,&quot;cause_.ldtext&quot;:null,&quot;resolution_.ldtext&quot;:null,&quot;reportedbyp_.langcode&quot;:&quot;EN&quot;,&quot;asset_.location&quot;:null,&quot;solution_.symptom_.ldtext&quot;:null,&quot;solution_.cause_.ldtext&quot;:null,&quot;solution_.resolution_.ldtext&quot;:null,&quot;commlog_&quot;:[],&quot;attachment_&quot;:[],&quot;relatedrecord_&quot;:[],&quot;aticket_&quot;:[],&quot;worklog_&quot;:[{&quot;_iscreation&quot;:true,&quot;clientviewable&quot;:&quot;1&quot;,&quot;createdate&quot;:null,&quot;wld_.ldtext&quot;:&quot;&lt;p&gt;Load Test&lt;/p&gt;&quot;,&quot;description&quot;:&quot;Load Test&quot;,&quot;#isDirty&quot;:true}]},&quot;requestData&quot;:{&quot;id&quot;:${__intSum(2821,${execnumber})},&quot;userId&quot;:&quot;${__intSum(2412,${execnumber})}&quot;,&quot;applicationName&quot;:&quot;servicerequest&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;compositionData&quot;:{&quot;operation&quot;:&quot;crud_create&quot;,&quot;dispatcherComposition&quot;:&quot;worklog_&quot;,&quot;compositionItem&quot;:{&quot;_iscreation&quot;:true,&quot;clientviewable&quot;:&quot;1&quot;,&quot;createdate&quot;:null,&quot;wld_.ldtext&quot;:&quot;&lt;p&gt;Load Test&lt;/p&gt;&quot;,&quot;description&quot;:&quot;Load Test&quot;,&quot;#isDirty&quot;:true}},&quot;routeParametersDTO&quot;:{&quot;checkPointData&quot;:[{&quot;listContext&quot;:{&quot;searchParams&quot;:&quot;&quot;,&quot;searchValues&quot;:&quot;&quot;,&quot;searchSort&quot;:&quot;sr.ticketuid desc&quot;,&quot;SearchAscending&quot;:false,&quot;filterFixedWhereClause&quot;:null,&quot;needsCountUpdate&quot;:true,&quot;quickSearchDTO&quot;:{&quot;compositionsToInclude&quot;:[]},&quot;searchTemplate&quot;:null,&quot;pageNumber&quot;:4,&quot;pageSize&quot;:30},&quot;applicationKey&quot;:&quot;servicerequest.list&quot;}]},&quot;currentSchemaKey&quot;:&quot;editdetail.input.web&quot;}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/data/servicerequest/</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="JSON HTTP Header" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Compositions" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;application&quot;:&quot;servicerequest&quot;,&quot;request&quot;:{&quot;key&quot;:{&quot;schemaId&quot;:&quot;editdetail&quot;,&quot;mode&quot;:&quot;input&quot;,&quot;platform&quot;:&quot;web&quot;},&quot;id&quot;:${__intSum(2821,${execnumber})},&quot;paginatedSearch&quot;:{&quot;searchParams&quot;:&quot;&quot;,&quot;searchValues&quot;:&quot;&quot;,&quot;searchSort&quot;:&quot;&quot;,&quot;SearchAscending&quot;:false,&quot;filterFixedWhereClause&quot;:null,&quot;needsCountUpdate&quot;:true,&quot;pageNumber&quot;:1,&quot;pageSize&quot;:10},&quot;compositionList&quot;:[&quot;worklog_&quot;]},&quot;data&quot;:{&quot;ismticketid&quot;:&quot;${__intSum(2018,${execnumber})}&quot;,&quot;ismticketuid&quot;:${__intSum(1906,${execnumber})},&quot;description&quot;:&quot;Load Test&quot;,&quot;siteid&quot;:&quot;NASP&quot;,&quot;createdby&quot;:&quot;TCOTTIER&quot;,&quot;reportedphone&quot;:&quot;480-941-6482&quot;,&quot;internalpriority&quot;:4,&quot;itdfirstcallresolution&quot;:true,&quot;pluspcustomer&quot;:&quot;CPS-00&quot;,&quot;reportdate&quot;:&quot;06/09/2016 14:17:47&quot;,&quot;affecteddate&quot;:&quot;06/09/2016 14:17:47&quot;,&quot;actualstart&quot;:null,&quot;actualfinish&quot;:null,&quot;changedate&quot;:&quot;06/10/2016 12:21:36&quot;,&quot;changeby&quot;:&quot;TCOTTIER&quot;,&quot;statusdate&quot;:&quot;06/10/2016 12:21:35&quot;,&quot;itdclosedate&quot;:null,&quot;outageduration&quot;:0,&quot;creationdate&quot;:&quot;2016-06-09T14:18:42&quot;,&quot;targetstart&quot;:&quot;2016-06-09T00:00:00&quot;,&quot;targetfinish&quot;:&quot;2016-06-10T00:00:00&quot;,&quot;isglobal&quot;:1,&quot;isknownerror&quot;:1,&quot;sitevisit&quot;:1,&quot;ticketid&quot;:&quot;${__intSum(2412,${execnumber})}&quot;,&quot;ticketuid&quot;:${__intSum(2821,${execnumber})},&quot;solution&quot;:null,&quot;selfservsolaccess&quot;:0,&quot;externalsystem&quot;:&quot;EMAIL&quot;,&quot;reportedby&quot;:&quot;TCOTTIER&quot;,&quot;affectedperson&quot;:&quot;TCOTTIER&quot;,&quot;owner&quot;:&quot;TCOTTIER&quot;,&quot;itdresolvergroup&quot;:&quot;G_EXT_SD&quot;,&quot;itdchcreatedbygroup&quot;:&quot;G_EXT_SD&quot;,&quot;ownergroup&quot;:&quot;G_EXT_SD&quot;,&quot;tickettype&quot;:&quot;CANVAS Developer support (iRFS)&quot;,&quot;classificationid&quot;:&quot;AGENT 1&quot;,&quot;impact&quot;:4,&quot;urgency&quot;:4,&quot;reportedpriority&quot;:4,&quot;department&quot;:&quot;DoF&quot;,&quot;itdclosurecode&quot;:&quot;NO ACTION&quot;,&quot;location&quot;:&quot;NASP&quot;,&quot;assetnum&quot;:null,&quot;status&quot;:&quot;QUEUED&quot;,&quot;rowstamp&quot;:5126465,&quot;solution_.description&quot;:null,&quot;ld_.ldtext&quot;:&quot;&lt;p&gt;Load Test&lt;/p&gt;&quot;,&quot;symptom_.ldtext&quot;:null,&quot;cause_.ldtext&quot;:null,&quot;resolution_.ldtext&quot;:null,&quot;reportedbyp_.langcode&quot;:&quot;EN&quot;,&quot;asset_.location&quot;:null,&quot;solution_.symptom_.ldtext&quot;:null,&quot;solution_.cause_.ldtext&quot;:null,&quot;solution_.resolution_.ldtext&quot;:null}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${cpath}/api/generic/Composition/GetCompositionData</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="JSON HTTP Header" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                </value>
              </objProp>
              <stringProp name="filename">C:\Users\emesquita\Desktop\JMeter Users.jmx</stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Result Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="Result Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>false</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>false</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename">C:\Users\emesquita\Desktop\last.csv</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="Response Times Over Time" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">100</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="Transactions per Second" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesPercentilesGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="Response Times Percentiles" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
1465602719842,4405,Save New,200,OK,Service Request New Use Case 1-7,text,true,,40771,10,10,4371,0
1465602719809,4603,Save New,200,OK,Service Request New Use Case 1-2,text,true,,40774,10,10,4492,0
1465602719810,4668,Save New,200,OK,Service Request New Use Case 1-6,text,true,,40774,10,10,4445,0
1465602724253,226,Associations,200,OK,Service Request New Use Case 1-7,text,true,,921,10,10,226,0
1465602719836,4670,Save New,200,OK,Service Request New Use Case 1-1,text,true,,40771,10,10,4643,0
1465602719863,4651,Save New,200,OK,Service Request New Use Case 1-5,text,true,,40774,10,10,4614,0
1465602719851,4670,Save New,200,OK,Service Request New Use Case 1-9,text,true,,40766,10,10,4627,0
1465602724482,79,Compositions,200,OK,Service Request New Use Case 1-7,text,true,,925,10,10,79,0
1465602719841,4710,All But Login,200,"Number of samples in transaction : 3, number of failing samples : 0",Service Request New Use Case 1-7,,true,,42617,10,10,4676,13
1465602718757,5476,All,200,"Number of samples in transaction : 4, number of failing samples : 0",Service Request New Use Case 1-7,,true,,148021,10,10,5130,334
1465602724493,144,Associations,200,OK,Service Request New Use Case 1-6,text,true,,921,9,9,144,0
1465602724508,144,Associations,200,OK,Service Request New Use Case 1-1,text,true,,921,9,9,144,0
1465602724515,265,Associations,200,OK,Service Request New Use Case 1-5,text,true,,921,9,9,265,0
1465602724523,273,Associations,200,OK,Service Request New Use Case 1-9,text,true,,921,9,9,273,0
1465602724639,161,Compositions,200,OK,Service Request New Use Case 1-6,text,true,,925,9,9,161,0
1465602719808,4973,All But Login,200,"Number of samples in transaction : 3, number of failing samples : 0",Service Request New Use Case 1-6,,true,,42620,9,9,4750,20
1465602718780,5584,All,,"Number of samples in transaction : 4, number of failing samples : 1",Service Request New Use Case 1-6,,false,,58488,9,9,5193,437
1465602724653,156,Compositions,200,OK,Service Request New Use Case 1-1,text,true,,925,8,8,156,0
1465602724480,329,Associations,200,OK,Service Request New Use Case 1-2,text,true,,921,8,8,329,0
1465602719835,4970,All But Login,200,"Number of samples in transaction : 3, number of failing samples : 0",Service Request New Use Case 1-1,,true,,42617,8,8,4943,5
1465602718756,5662,All,200,"Number of samples in transaction : 4, number of failing samples : 0",Service Request New Use Case 1-1,,true,,147593,8,8,5321,392
1465602724783,98,Compositions,200,OK,Service Request New Use Case 1-5,text,true,,925,7,7,98,0
1465602719863,5014,All But Login,200,"Number of samples in transaction : 3, number of failing samples : 0",Service Request New Use Case 1-5,,true,,42620,7,7,4977,5
1465602718758,5753,All,200,"Number of samples in transaction : 4, number of failing samples : 0",Service Request New Use Case 1-5,,true,,147168,7,7,5402,371
1465602724797,113,Compositions,200,OK,Service Request New Use Case 1-9,text,true,,923,6,6,113,0
1465602719837,5056,All But Login,200,"Number of samples in transaction : 3, number of failing samples : 0",Service Request New Use Case 1-9,,true,,42610,6,6,5013,18
1465602718788,5817,All,200,"Number of samples in transaction : 4, number of failing samples : 0",Service Request New Use Case 1-9,,true,,146730,6,6,5459,307
1465602724921,111,Compositions,200,OK,Service Request New Use Case 1-2,text,true,,925,5,5,111,0
1465602719808,5043,All But Login,200,"Number of samples in transaction : 3, number of failing samples : 0",Service Request New Use Case 1-2,,true,,42620,5,5,4932,181
1465602718755,5701,All,200,"Number of samples in transaction : 4, number of failing samples : 0",Service Request New Use Case 1-2,,true,,146312,5,5,5310,577
1465602722872,2302,Save New,200,OK,Service Request New Use Case 1-10,text,true,,40776,4,4,2267,0
1465602722872,2347,Save New,200,OK,Service Request New Use Case 1-4,text,true,,40772,4,4,2311,0
1465602722872,2412,Save New,200,OK,Service Request New Use Case 1-3,text,true,,40776,4,4,2375,0
1465602722875,2455,Save New,200,OK,Service Request New Use Case 1-8,text,true,,40773,4,4,2417,0
1465602725175,156,Associations,200,OK,Service Request New Use Case 1-10,text,true,,921,4,4,156,0
1465602725220,185,Associations,200,OK,Service Request New Use Case 1-4,text,true,,921,4,4,185,0
1465602725285,176,Associations,200,OK,Service Request New Use Case 1-3,text,true,,921,4,4,175,0
1465602725332,149,Compositions,200,OK,Service Request New Use Case 1-10,text,true,,925,4,4,149,0
1465602722872,2607,All But Login,200,"Number of samples in transaction : 3, number of failing samples : 0",Service Request New Use Case 1-10,,true,,42622,4,4,2572,2
1465602718788,6376,All,200,"Number of samples in transaction : 4, number of failing samples : 0",Service Request New Use Case 1-10,,true,,147170,4,4,5987,317
1465602725331,163,Associations,200,OK,Service Request New Use Case 1-8,text,true,,922,3,3,163,0
1465602725406,115,Compositions,200,OK,Service Request New Use Case 1-4,text,true,,925,3,3,115,0
1465602722872,2647,All But Login,200,"Number of samples in transaction : 3, number of failing samples : 0",Service Request New Use Case 1-4,,true,,42618,3,3,2611,3
1465602718754,6360,All,200,"Number of samples in transaction : 4, number of failing samples : 0",Service Request New Use Case 1-4,,true,,146738,3,3,5971,408
1465602725462,95,Compositions,200,OK,Service Request New Use Case 1-3,text,true,,923,2,2,95,0
1465602722871,2683,All But Login,200,"Number of samples in transaction : 3, number of failing samples : 0",Service Request New Use Case 1-3,,true,,42620,2,2,2645,4
1465602718742,6333,All,200,"Number of samples in transaction : 4, number of failing samples : 0",Service Request New Use Case 1-3,,true,,147596,2,2,5966,483
1465602725496,89,Compositions,200,OK,Service Request New Use Case 1-8,text,true,,925,1,1,88,0
1465602722874,2707,All But Login,200,"Number of samples in transaction : 3, number of failing samples : 0",Service Request New Use Case 1-8,,true,,42620,1,1,2668,4
1465602718812,6502,All,200,"Number of samples in transaction : 4, number of failing samples : 0",Service Request New Use Case 1-8,,true,,146740,1,1,6099,271
1465602763600,2690,Save New,500,Internal Server Error,Service Request New Use Case 1-5,text,false,,15426,10,10,2690,0
1465602766294,1253,Associations,200,OK,Service Request New Use Case 1-5,text,true,,921,10,10,1253,0
1465602763541,7722,Save New,500,Internal Server Error,Service Request New Use Case 1-2,text,false,,15426,10,10,7721,0
1465602767556,3750,Compositions,200,OK,Service Request New Use Case 1-5,text,true,,926,10,10,3750,0
1465602763600,7693,All But Login,,"Number of samples in transaction : 3, number of failing samples : 1",Service Request New Use Case 1-5,,false,,17273,10,10,7693,13
1465602763005,8286,All,,"Number of samples in transaction : 4, number of failing samples : 1",Service Request New Use Case 1-5,,false,,120537,10,10,7917,16
1465602771266,321,Associations,200,OK,Service Request New Use Case 1-2,text,true,,922,9,9,321,0
1465602771588,100,Compositions,200,OK,Service Request New Use Case 1-2,text,true,,926,9,9,100,0
1465602763541,8143,All But Login,,"Number of samples in transaction : 3, number of failing samples : 1",Service Request New Use Case 1-2,,false,,17274,9,9,8142,4
1465602763021,8661,All,,"Number of samples in transaction : 4, number of failing samples : 1",Service Request New Use Case 1-2,,false,,120538,9,9,8331,6
1465602763591,8885,Save New,200,OK,Service Request New Use Case 1-3,text,true,,40768,8,8,8835,0
1465602763532,8964,Save New,200,OK,Service Request New Use Case 1-10,text,true,,40772,8,8,8929,0
1465602772479,129,Associations,200,OK,Service Request New Use Case 1-3,text,true,,921,8,8,129,0
1465602772498,127,Associations,200,OK,Service Request New Use Case 1-10,text,true,,922,8,8,127,0
1465602772616,93,Compositions,200,OK,Service Request New Use Case 1-3,text,true,,926,8,8,93,0
1465602772626,90,Compositions,200,OK,Service Request New Use Case 1-10,text,true,,926,8,8,90,0
1465602763531,9181,All But Login,200,"Number of samples in transaction : 3, number of failing samples : 0",Service Request New Use Case 1-10,,true,,42620,8,8,9146,4
1465602763019,9687,All,200,"Number of samples in transaction : 4, number of failing samples : 0",Service Request New Use Case 1-10,,true,,145884,8,8,9319,11
1465602763590,9107,All But Login,200,"Number of samples in transaction : 3, number of failing samples : 0",Service Request New Use Case 1-3,,true,,42615,8,8,9057,27
1465602763055,9641,All,200,"Number of samples in transaction : 4, number of failing samples : 0",Service Request New Use Case 1-3,,true,,145879,8,8,9237,41
1465602763650,9636,Save New,200,OK,Service Request New Use Case 1-9,text,true,,40774,6,6,9601,0
1465602763653,9707,Save New,200,OK,Service Request New Use Case 1-4,text,true,,40772,6,6,9674,0
1465602773288,249,Associations,200,OK,Service Request New Use Case 1-9,text,true,,922,6,6,249,0
1465602763618,10017,Save New,200,OK,Service Request New Use Case 1-1,text,true,,40774,6,6,9981,0
1465602763651,10028,Save New,200,OK,Service Request New Use Case 1-8,text,true,,40770,6,6,9993,0
1465602763650,10073,Save New,200,OK,Service Request New Use Case 1-6,text,true,,40770,6,6,10045,0
1465602773362,363,Associations,200,OK,Service Request New Use Case 1-4,text,true,,922,6,6,362,0
1465602773538,187,Compositions,200,OK,Service Request New Use Case 1-9,text,true,,923,6,6,187,0
1465602763649,10072,All But Login,200,"Number of samples in transaction : 3, number of failing samples : 0",Service Request New Use Case 1-9,,true,,42619,6,6,10037,3
1465602763014,10681,All,200,"Number of samples in transaction : 4, number of failing samples : 0",Service Request New Use Case 1-9,,true,,145883,6,6,10272,30
1465602763670,10102,Save New,200,OK,Service Request New Use Case 1-7,text,true,,40772,5,5,10064,0
1465602773726,112,Compositions,200,OK,Service Request New Use Case 1-4,text,true,,926,5,5,112,0
1465602763649,10182,All But Login,200,"Number of samples in transaction : 3, number of failing samples : 0",Service Request New Use Case 1-4,,true,,42620,5,5,10148,7
1465602763006,10807,All,200,"Number of samples in transaction : 4, number of failing samples : 0",Service Request New Use Case 1-4,,true,,145884,5,5,10413,25
1465602773682,230,Associations,200,OK,Service Request New Use Case 1-8,text,true,,919,4,4,230,0
1465602773638,292,Associations,200,OK,Service Request New Use Case 1-1,text,true,,922,4,4,292,0
1465602773725,207,Associations,200,OK,Service Request New Use Case 1-6,text,true,,921,4,4,207,0
1465602773774,163,Associations,200,OK,Service Request New Use Case 1-7,text,true,,923,4,4,163,0
1465602773913,105,Compositions,200,OK,Service Request New Use Case 1-8,text,true,,926,4,4,105,0
1465602763651,10363,All But Login,200,"Number of samples in transaction : 3, number of failing samples : 0",Service Request New Use Case 1-8,,true,,42615,4,4,10328,4
1465602763026,10982,All,200,"Number of samples in transaction : 4, number of failing samples : 0",Service Request New Use Case 1-8,,true,,145879,4,4,10636,10
1465602773931,126,Compositions,200,OK,Service Request New Use Case 1-1,text,true,,926,3,3,126,0
1465602763618,10435,All But Login,200,"Number of samples in transaction : 3, number of failing samples : 0",Service Request New Use Case 1-1,,true,,42622,3,3,10399,4
1465602762986,11066,All,200,"Number of samples in transaction : 4, number of failing samples : 0",Service Request New Use Case 1-1,,true,,145886,3,3,10646,5
1465602773933,127,Compositions,200,OK,Service Request New Use Case 1-6,text,true,,926,2,2,127,0
1465602763649,10407,All But Login,200,"Number of samples in transaction : 3, number of failing samples : 0",Service Request New Use Case 1-6,,true,,42617,2,2,10379,3
1465602763016,11039,All,200,"Number of samples in transaction : 4, number of failing samples : 0",Service Request New Use Case 1-6,,true,,145881,2,2,10702,4
1465602773939,134,Compositions,200,OK,Service Request New Use Case 1-7,text,true,,926,1,1,134,0
1465602763662,10399,All But Login,200,"Number of samples in transaction : 3, number of failing samples : 0",Service Request New Use Case 1-7,,true,,42621,1,1,10361,30
1465602763067,10978,All,200,"Number of samples in transaction : 4, number of failing samples : 0",Service Request New Use Case 1-7,,true,,145885,1,1,10581,56
